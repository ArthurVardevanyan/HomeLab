apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-manager-discord
  namespace: alert-manager-discord
  labels:
    app.kubernetes.io/instance: openshift-monitoring
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
    checkov.io/skip2: CKV_K8S_8=App doesn't have a health endpoint
    checkov.io/skip3: CKV_K8S_9=App doesn't have a health endpoint
    checkov.io/skip4: CKV_K8S_35=App doesn't support Secret Files
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alert-manager-discord
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: alert-manager-discord
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: alert-manager-discord
              topologyKey: "kubernetes.io/hostname"
      containers:
        - image: docker.io/speckle/alertmanager-discord:0.3.2@sha256:f6221ff308e92a606d9ab591e6dffeae78c469c08f444acf31d8b6bc4414c844
          envFrom:
            - secretRef:
                name: discord-webhook
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          name: alert-manager-discord
          ports:
            - containerPort: 9094
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources:
            limits:
              cpu: 30m
              memory: 30M
            requests:
              cpu: 15m
              memory: 15M
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9094
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 15
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9094
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: false
