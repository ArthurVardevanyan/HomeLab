apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ansible
  namespace: homelab
  labels:
    app: homelab
    app.kubernetes.io/instance: homelab
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  params:
    - name: playbooks
      type: string
    - name: image
      type: string
      default: "registry.arthurvardevanyan.com/homelab/toolbox:latest"
    - name: dry_run
      type: string
      default: "true"

  workspaces:
    - name: data

  steps:
    - name: ansible
      image: "$(params.image)"
      resources:
        limits:
          cpu: 750m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
      securityContext:
        runAsNonRoot: true
        #runAsUser: 65532
        privileged: false
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
            - MKNOD
      env:
        - name: PLAYBOOKS
          value: "$(params.playbooks)"
        - name: DRY_RUN
          value: "$(params.dry_run)"
        - name: WORKSPACE_DATA_PATH
          value: $(workspaces.data.path)
      volumeMounts:
        - name: ssh
          mountPath: /.ssh
        - name: ansible
          mountPath: /.ansible
        - name: tmp
          mountPath: /tmp
      script: |
        #!/bin/bash

        set -o errexit
        set -o nounset
        set -o pipefail

        export URL=arthurvardevanyan.com

        kubectl get secret cockpit-cert -n homelab -o yaml > /tmp/cockpit-cert.yaml
        yq '.data."tls.crt"' /tmp/cockpit-cert.yaml | base64 -d > /tmp/cockpit.crt
        yq '.data."tls.key"' /tmp/cockpit-cert.yaml | base64 -d > /tmp/cockpit.key

        export CI_JOB_JWT="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)"
        export VAULT_ADDR=https://vault.${URL}
        export VAULT_TOKEN="$(vault write -field=token auth/homelab/login role=homelab jwt=${CI_JOB_JWT})"
        export SSH_KNOWN_HOSTS="$(vault kv get -field=known_hosts secret/gitlab/ssh)"
        export SSH_PRIVATE_KEY="$(vault kv get -field=private_key secret/gitlab/ssh)"
        export SUDO="$(vault kv get -field=sudo secret/gitlab/ssh)"

        export DISCORD="$(vault kv get -field=webhook secret/gitlab/discord)"
        sed -i "s,REPLACE_ME,${DISCORD},g" ${WORKSPACE_DATA_PATH}/machineConfigs/servers/server/home/arthur/discord/discord_bot.sh
        sed -i "s,REPLACE_ME,${URL},g" ${WORKSPACE_DATA_PATH}/machineConfigs/servers/kvm-1/etc/promtail/config.yml
        sed -i "s,REPLACE_ME,${URL},g" ${WORKSPACE_DATA_PATH}/machineConfigs/servers/kvm-2/etc/promtail/config.yml
        sed -i "s,##,,g"  ${WORKSPACE_DATA_PATH}/ansible/servers.yaml

        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

        export CHECK=""
        if [[ "${DRY_RUN}" = "true" ]]; then
          export CHECK="--check"
        fi

        for PLAYBOOK in ${PLAYBOOKS//,/ }
        do
        ansible-playbook -e "ansible_ssh_timeout=1" -i ${WORKSPACE_DATA_PATH}/ansible/inventory ${WORKSPACE_DATA_PATH}/ansible/${PLAYBOOK}.yaml \
          --extra-vars "ansible_become_pass=${SUDO} ansible_ssh_pass=${SUDO} \
          ansible_python_interpreter=/usr/bin/python3" -e 'ansible_python_interpreter=/usr/bin/python3' ${CHECK}
        done
  volumes:
    - name: ssh
      emptyDir:
        sizeLimit: 1Mi
    - name: ansible
      emptyDir:
        sizeLimit: 2Mi
    - name: tmp
      emptyDir:
        sizeLimit: 10Mi
