# https://hackernoon.com/kubernetes-monitoring-with-prometheus-and-thanos-z91w3uc2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-querier
  namespace: prometheus
  labels:
    app: thanos-querier
    app.kubernetes.io/instance: prometheus
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-querier
  template:
    metadata:
      labels:
        app: thanos-querier
      annotations:
        enable.version-checker.io/thanos-querier: "true"
    spec:
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      containers:
        - name: thanos-querier
          image: quay.io/thanos/thanos:v0.34.1@sha256:3690933b92a186930004391e902587177ccb53a16b237a56fa3a1b882422f8ec
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 50m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 5Gi
          args:
            - query
            - --log.level=debug
            - --query.replica-label=replica
            - --store=dnssrv+thanos-prometheus-headless.prometheus.svc.cluster.local:10901
            - --store=dnssrv+thanos-store-gateway:10901
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: http
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: http
              path: /-/ready
