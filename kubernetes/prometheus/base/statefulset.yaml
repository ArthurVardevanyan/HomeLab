apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: prometheus
  labels:
    app: prometheus-server
    app.kubernetes.io/instance: prometheus
spec:
  replicas: 1
  serviceName: prometheus-service
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
      annotations:
        # prometheus.io/scrape: "true"
        # prometheus.io/port: "9090"
        enable.version-checker.io/prometheus: "true"
        enable.version-checker.io/thanos: "true"
        seccomp.security.alpha.kubernetes.io/defaultProfileName: "runtime/default"
    spec:
      automountServiceAccountToken: true
      serviceAccountName: prometheus-sa
      containers:
        - name: prometheus
          imagePullPolicy: IfNotPresent
          image: prom/prometheus:v2.46.0
          securityContext:
            # runAsGroup: 65534
            # runAsUser: 65534
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - all
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus_data/"
            - "--storage.tsdb.retention.time=60d"
            - "--web.enable-admin-api"
            - "--storage.tsdb.min-block-duration=2h"
            - "--storage.tsdb.max-block-duration=2h"
          ports:
            - containerPort: 9090
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 1500m
              memory: 5Gi
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-pvc
              mountPath: /prometheus_data/
        # https://hackernoon.com/kubernetes-monitoring-with-prometheus-and-thanos-z91w3uc2
        - name: thanos
          image: quay.io/thanos/thanos:v0.32.2
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - all
          resources:
            requests:
              cpu: 25m
              memory: 512Mi
            limits:
              cpu: 250m
              memory: 1Gi
          args:
            - "sidecar"
            - "--log.level=debug"
            - "--tsdb.path=/prometheus_data"
            - "--prometheus.url=http://127.0.0.1:9090"
            - "--objstore.config-file=/etc/secret/truenas.yaml"
          ports:
            - name: http-sidecar
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          livenessProbe:
            httpGet:
              port: 10902
              path: /-/healthy
          readinessProbe:
            httpGet:
              port: 10902
              path: /-/ready
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-pvc
              mountPath: /prometheus_data/
            - name: truenas
              mountPath: /etc/secret
              readOnly: true
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-pvc
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: thanos-gcs-credentials
          secret:
            secretName: thanos-gcs-credentials
        - name: truenas
          secret:
            secretName: truenas
