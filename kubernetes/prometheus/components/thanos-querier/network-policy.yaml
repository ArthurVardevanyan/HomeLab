---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ceph-obj
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: quay
spec:
  podSelector:
    matchLabels:
      app: thanos-store-gateway
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: cephobjectstores.ceph.rook.io
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: rook-ceph
      ports:
        - protocol: TCP
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-local-egress-thanos-store-gateway
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Egress
  podSelector:
    matchLabels:
      app: thanos-store-gateway
  egress:
    - to:
        - ipBlock:
            cidr: 10.0.0.0/8
        - ipBlock:
            cidr: 172.16.0.0/12
        - ipBlock:
            cidr: 192.168.0.0/16
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-traffic
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Egress
  podSelector:
    matchLabels:
      app: thanos-querier
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: openshift-dns
          podSelector:
            matchLabels:
              dns.operator.openshift.io/daemonset-dns: default
      ports:
        - port: 5353
          protocol: UDP
        - port: 5353
          protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-openshift-ingress-thanos
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: thanos-querier
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              network.openshift.io/policy-group: ingress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-grafana-ingress-thanos
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: thanos-querier
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              app.kubernetes.io/instance: grafana
          podSelector:
            matchLabels:
              app: grafana
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-egress-thanos-querier
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Egress
  podSelector:
    matchLabels:
      app: thanos-querier
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: prometheus
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: prometheus
          podSelector:
            matchLabels:
              app: thanos-store-gateway
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-thanos-querier-prometheus
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: prometheus
          podSelector:
            matchLabels:
              app: thanos-querier
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-thanos-querier-thanos-store-gateway
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: thanos-store-gateway
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: prometheus
          podSelector:
            matchLabels:
              app: thanos-querier
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ceph-ingress-thanos-querier
  namespace: prometheus
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/instance: prometheus
spec:
  policyTypes:
    - Ingress
  podSelector:
    matchLabels:
      app: thanos-querier
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: rook-ceph
          podSelector:
            matchLabels:
              app: rook-ceph-mgr
