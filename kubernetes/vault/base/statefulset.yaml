apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: vault
  labels:
    app: vault
    app.kubernetes.io/instance: vault
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
spec:
  replicas: 1
  serviceName: vault
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
      annotations:
        enable.version-checker.io/vault: "true"
    spec:
      automountServiceAccountToken: false
      serviceAccountName: vault-sa
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - image: hashicorp/vault:1.17.2@sha256:aaaedf0b3b34560157cc7c06f50f794eb7baa071165f2eed4db94b44db901806
          imagePullPolicy: IfNotPresent
          name: vault
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "vault status -tls-skip-verify"]
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /v1/sys/health?standbyok=true
              scheme: HTTPS
              port: 8200
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 10
          ports:
            - containerPort: 443
              protocol: TCP
              name: unused-443
            - containerPort: 8200
              protocol: TCP
              name: vault
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            # runAsUser: 11000
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
            #   add:
            #     - IPC_LOCK
          command:
            - vault
            - server
            - -config=/vault/config/vault.json
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/run/secrets/google/credentials_config.json
            - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
              value: /var/run/secrets/google/credentials_config.json
          volumeMounts:
            - mountPath: /vault/file
              name: vault-pvc
            - mountPath: /vault/config
              name: vault-config
            - mountPath: /vault/cert
              name: vault-cert
            - name: gcp-credentials-request
              readOnly: true
              mountPath: /var/run/secrets/google
            - name: serviceaccount-token
              readOnly: true
              mountPath: /var/run/secrets/openshift/serviceaccount
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "768Mi"
              cpu: "150m"
      hostname: vault
      restartPolicy: Always
      volumes:
        - name: vault-config
          configMap:
            name: vault-config
        - name: vault-cert
          secret:
            secretName: vault-cert
        - name: vault-pvc
          persistentVolumeClaim:
            claimName: vault
        - name: gcp-credentials-request
          configMap:
            name: gcp-credentials-request
            defaultMode: 420
        - name: serviceaccount-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: openshift
                  expirationSeconds: 3600
                  path: token
            defaultMode: 420
