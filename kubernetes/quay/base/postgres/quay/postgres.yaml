# PSQL 15 Public Scheme Tweak
# \c quay
# GRANT CREATE ON SCHEMA public TO quay;
# CREATE EXTENSION pg_trgm;
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: quay
  namespace: quay
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/instance: quay
spec:
  backups:
    pgbackrest:
      global:
        repo1-retention-full: "14"
        repo1-retention-full-type: count
      repoHost:
        resources:
          limits:
            memory: "64Mi"
            cpu: "60m"
          requests:
            memory: "32Mi"
            cpu: "15m"
      sidecars:
        pgbackrest:
          resources:
            limits:
              memory: "64Mi"
              cpu: "100m"
            requests:
              memory: "32Mi"
              cpu: "15m"
        pgbackrestConfig:
          resources:
            limits:
              memory: "32Mi"
              cpu: "45m"
            requests:
              memory: "16Mi"
              cpu: "15m"
      repos:
        - name: repo1
          schedules:
            full: "0 7 * * *"
          volume:
            volumeClaimSpec:
              storageClassName: longhorn
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 2Gi
  instances:
    - dataVolumeClaimSpec:
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 3Gi
      name: ""
      replicas: 2
      resources:
        requests:
          memory: "350Mi"
          cpu: "25m"
        limits:
          memory: "700Mi"
          cpu: "100m"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: quay
                  postgres-operator.crunchydata.com/instance-set: "00"
              topologyKey: "kubernetes.io/hostname"
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: quay
                    postgres-operator.crunchydata.com/instance-set: "00"
                topologyKey: topology.kubernetes.io/zone
  monitoring:
    pgmonitor:
      exporter:
        resources:
          limits:
            memory: "32Mi"
            cpu: "10m"
          requests:
            memory: "16Mi"
            cpu: "5m"
  # userInterface:
  #   pgAdmin:
  #     dataVolumeClaimSpec:
  #       accessModes:
  #         - ReadWriteOnce
  #       resources:
  #         requests:
  #           storage: 25Mi
  #       storageClassName: longhorn
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpu: 150m
  #         memory: 256Mi
  #       requests:
  #         cpu: 25m
  #         memory: 128Mi
  openshift: true
  port: 5432
  postgresVersion: 15
# ---
# apiVersion: postgres-operator.crunchydata.com/v1beta1
# kind: PGUpgrade
# metadata:
#   name: quay-upgrade
#   namespace: quay
# spec:
#   fromPostgresVersion: 14
#   postgresClusterName: quay
#   toPostgresVersion: 15

# kubectl delete ResourceQuota -n postgres --all
# kubectl delete LimitRange -n postgres --all

# kubectl patch postgrescluster quay -n postgres --type=merge \
#     -p '{"spec":{"shutdown":true}}'

# kubectl annotate postgrescluster quay -n postgres  \
#     postgres-operator.crunchydata.com/allow-upgrade=quay-upgrade

# kubectl patch postgrescluster quay -n postgres --type "json" -p \
# '[{"op":"replace","path":"/spec/postgresVersion","value":15}]'

# kubectl patch postgrescluster quay -n postgres --type=merge \
#     -p '{"spec":{"shutdown":false}}'
