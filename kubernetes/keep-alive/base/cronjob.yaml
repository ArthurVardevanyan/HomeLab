kind: CronJob
apiVersion: batch/v1
metadata:
  name: keep-alive
  namespace: keep-alive
  labels:
    app: keep-alive
    app.kubernetes.io/instance: keep-alive
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
    checkov.io/skip2: CKV_K8S_31=Broken Check
    checkov.io/skip3: CKV_K8S_43=Don't Mind Tag for This
spec:
  schedule: "*/10 * * * *"
  concurrencyPolicy: Replace
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  suspend: false
  startingDeadlineSeconds: 60
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        metadata:
          labels:
            app: keep-alive
        spec:
          tolerations:
            - key: node-role.kubernetes.io/control-plane
              effect: NoSchedule
            - key: node-role.kubernetes.io/control-plane
              effect: NoSchedule
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: node-role.kubernetes.io/control-plane
                        operator: In
                        values:
                          - "true"
          restartPolicy: OnFailure
          serviceAccountName: keep-alive
          schedulerName: default-scheduler
          automountServiceAccountToken: false
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
          containers:
            - name: keep-alive
              imagePullPolicy: IfNotPresent
              image: registry.arthurvardevanyan.com/homelab/toolbox:not_latest
              command:
                - /bin/bash
                - -c
                - |
                  set -o errexit  # exit on any failure
                  set -o nounset  # exit on undeclared variables
                  set -o pipefail # return value of all commands in a pipe

                  export TIMESTAMP=$(date +%s)
                  echo ${TIMESTAMP} > /tmp/${TIMESTAMP}
                  gcloud storage cp /tmp/${TIMESTAMP} gs://${GCS_BUCKET}
              env:
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: /var/run/secrets/google/credentials_config.json
                - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
                  value: /var/run/secrets/google/credentials_config.json
                - name: GCS_BUCKET
                  value: "okd_homelab_keep_alive"
              securityContext:
                runAsNonRoot: true
                privileged: false
                readOnlyRootFilesystem: true
                allowPrivilegeEscalation: false
                seccompProfile:
                  type: RuntimeDefault
                capabilities:
                  drop:
                    - ALL
              resources:
                requests:
                  memory: "50Mi"
                  cpu: "50m"
                  ephemeral-storage: 25Mi
                limits:
                  memory: "150Mi"
                  cpu: "150m"
                  ephemeral-storage: 100Mi
              volumeMounts:
                - name: tmp
                  mountPath: /tmp
                - name: gcp-credentials-request
                  readOnly: true
                  mountPath: /var/run/secrets/google
                - name: serviceaccount-token
                  readOnly: true
                  mountPath: /var/run/secrets/openshift/serviceaccount
          volumes:
            - name: tmp
              emptyDir:
                sizeLimit: 2Mi
            - name: gcp-credentials-request
              configMap:
                name: gcp-credentials-request
                defaultMode: 420
            - name: serviceaccount-token
              projected:
                sources:
                  - serviceAccountToken:
                      audience: openshift
                      expirationSeconds: 3600
                      path: token
                defaultMode: 420
