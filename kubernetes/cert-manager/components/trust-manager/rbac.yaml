---
# Source: trust-manager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: trust-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: trust-manager/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
  name: trust-manager
rules:
  - apiGroups:
      - "trust.cert-manager.io"
    resources:
      - "bundles"
    # We also need patch here so we can perform migrations from old CSA to SSA.
    verbs: ["get", "list", "watch", "patch"]

  # Permissions to update finalizers are required for trust-manager to work correctly
  # on OpenShift, even though we don't directly use finalizers at the time of writing
  - apiGroups:
      - "trust.cert-manager.io"
    resources:
      - "bundles/finalizers"
    verbs: ["update"]

  - apiGroups:
      - "trust.cert-manager.io"
    resources:
      - "bundles/status"
    verbs: ["patch"]

  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs: ["get", "list", "create", "patch", "watch", "delete"]
  - apiGroups:
      - ""
    resources:
      - "namespaces"
    verbs: ["get", "list", "watch"]

  - apiGroups:
      - ""
    resources:
      - "events"
    verbs: ["create", "patch"]
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs: ["get", "list", "create", "patch", "watch", "delete"]
---
# Source: trust-manager/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
  name: trust-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: trust-manager
subjects:
  - kind: ServiceAccount
    name: trust-manager
    namespace: cert-manager
---
# Source: trust-manager/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: trust-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "list"
      - "watch"
---
# Source: trust-manager/templates/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: trust-manager:leaderelection
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - "coordination.k8s.io"
    resources:
      - "leases"
    verbs:
      - "get"
      - "create"
      - "update"
      - "watch"
      - "list"
---
# Source: trust-manager/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: trust-manager
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: trust-manager
subjects:
  - kind: ServiceAccount
    name: trust-manager
    namespace: cert-manager
---
# Source: trust-manager/templates/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: trust-manager:leaderelection
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: trust-manager:leaderelection
subjects:
  - kind: ServiceAccount
    name: trust-manager
    namespace: cert-manager
---
# Source: trust-manager/templates/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: trust-manager-metrics
  namespace: cert-manager
  labels:
    app: trust-manager
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9402
      targetPort: 9402
      protocol: TCP
      name: metrics
  selector:
    app: trust-manager
---
# Source: trust-manager/templates/webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: trust-manager
  namespace: cert-manager
  labels:
    app: trust-manager
    app.kubernetes.io/name: trust-manager
    helm.sh/chart: trust-manager-v0.12.0
    app.kubernetes.io/instance: trust-manager
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 6443
      protocol: TCP
      name: webhook
  selector:
    app: trust-manager
