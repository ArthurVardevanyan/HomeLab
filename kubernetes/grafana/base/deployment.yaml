apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
  labels:
    app: grafana
    app.kubernetes.io/instance: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      annotations:
        enable.version-checker.io/grafana: "true"
        seccomp.security.alpha.kubernetes.io/defaultProfileName: "runtime/default"
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      securityContext:
        runAsNonRoot: true
        supplementalGroups:
          - 0
        # fsGroup: 11472
        # runAsGroup: 11472
        # runAsUser: 11472
      hostname: grafana
      restartPolicy: Always
      automountServiceAccountToken: false
      serviceAccountName: grafana-sa
      containers:
        - image: grafana/grafana:9.1.1
          imagePullPolicy: IfNotPresent
          name: grafana
          securityContext:
            # runAsGroup: 11472
            # runAsUser: 11472
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            # seccompProfile:
            #   type: RuntimeDefault
            capabilities:
              drop:
                - all
          ports:
            - containerPort: 3000
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            requests:
              ephemeral-storage: "15Mi"
              memory: "64Mi"
              cpu: "25m"
            limits:
              ephemeral-storage: "15Mi"
              memory: "192Mi"
              cpu: "100m"
          env:
            - name: GF_DATABASE_TYPE
              value: mysql
            - name: GF_DATABASE_HOST
              value: mariadb-galera.mariadb-galera
            - name: GF_DATABASE_NAME
              value: grafana
            - name: GF_DATABASE_USER
              value: grafana
            - name: GF_DATABASE_PASSWORD
              value: grafana
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-cache
            - name: grafana-dash-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboard-templates
              mountPath: /var/lib/grafana/dashboards
            - name: grafana-source-config
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-cache
          emptyDir:
            sizeLimit: 1Mi
        - name: grafana-source-config
          configMap:
            name: grafana-source-config
        - name: grafana-dash-config
          configMap:
            name: grafana-dashboard-config
        - name: dashboard-templates
          configMap:
            name: grafana-dashboards
