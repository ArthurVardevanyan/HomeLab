apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
  namespace: mariadb-galera
  labels:
    app: phpmyadmin
    app.kubernetes.io/instance: phpmyadmin
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
    checkov.io/skip2: CKV_K8S_22=Container Modifies Configs at Boot
spec:
  replicas: 0
  selector:
    matchLabels:
      app: phpmyadmin
  revisionHistoryLimit: 0
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: phpmyadmin
      annotations:
        enable.version-checker.io/phpmyadmin: "true"
    spec:
      automountServiceAccountToken: false
      serviceAccountName: phpmyadmin-sa
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      #   runAsUser: 11001
      #   fsGroup: 11001
      containers:
        - image: docker.io/bitnami/phpmyadmin:5.2.1-debian-12-r45@sha256:fe2d14966d5dd172b6588aa9f5230715634d75482419bb65f046854f72114318
          imagePullPolicy: IfNotPresent
          name: phpmyadmin
          securityContext:
            # runAsUser: 11001
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              memory: "75Mi"
              cpu: "5m"
            limits:
              memory: "250Mi"
              cpu: "250m"
          env:
            - name: DATABASE_HOST
              value: "mariadb-galera.mariadb-galera"
            - name: PHP_UPLOAD_MAX_FILESIZE
              value: "500M"
            - name: APACHE_HTTP_PORT_NUMBER
              value: "8080"
            - name: APACHE_RUN_USER
              value: "11001"
            - name: APACHE_RUN_GROUP
              value: "11001"
          ports:
            - containerPort: 8080
              name: web
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
