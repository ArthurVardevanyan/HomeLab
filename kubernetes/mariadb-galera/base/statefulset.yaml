apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mariadb-galera
  namespace: mariadb-galera
  labels:
    app.kubernetes.io/name: mariadb-galera
    app.kubernetes.io/instance: mariadb-galera
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
    checkov.io/skip2: CKV_K8S_23=Not Supported by App
    checkov.io/skip3: CKV_K8S_35=Not Supported by App
    checkov.io/skip4: CKV_K8S_22=Not Supported by App
    checkov.io/skip5: CKV_K8S_29=Not Supported by App
    checkov.io/skip6: CKV_K8S_31=Not Supported by App
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb-galera
      app.kubernetes.io/instance: mariadb-galera
  serviceName: mariadb-galera-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mariadb-galera
        app.kubernetes.io/instance: mariadb-galera
      annotations:
        enable.version-checker.io/mariadb-galera: "true"
        enable.version-checker.io/metrics: "true"
    spec:
      serviceAccountName: default
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: mariadb-galera
                  app.kubernetes.io/name: mariadb-galera
              topologyKey: kubernetes.io/hostname
      containers:
        - name: "mariadb-galera"
          image: docker.io/bitnami/mariadb-galera:10.11.7-debian-12-r12@sha256:44aac814fe677461dc37abf9325a8d7871a8822f36a4367161f89ce6feaccb33
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            # seccompProfile:
            #   type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          command:
            - bash
            - -ec
            - |
              #export MARIADB_GALERA_CLUSTER_BOOTSTRAP=yes
              #export MARIADB_GALERA_FORCE_SAFETOBOOTSTRAP=yes
              exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_DEFAULT_PORT_NUMBER
              value: "3306"
            - name: MARIADB_GALERA_CLUSTER_NAME
              value: "galera"
            - name: MARIADB_GALERA_CLUSTER_ADDRESS
              value: "gcomm://mariadb-galera-0.mariadb-galera-headless.mariadb-galera.svc.cluster.local,mariadb-galera-1.mariadb-galera-headless.mariadb-galera.svc.cluster.local,mariadb-galera-2.mariadb-galera-headless.mariadb-galera.svc.cluster.local"
            - name: MARIADB_ROOT_USER
              value: "root"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-galera
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "my_database"
            - name: MARIADB_GALERA_MARIABACKUP_USER
              value: "mariabackup"
            - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-galera
                  key: mariadb-galera-mariabackup-password
            - name: MARIADB_ENABLE_LDAP
              value: "no"
            - name: MARIADB_ENABLE_TLS
              value: "no"
          ports:
            - name: mysql
              containerPort: 3306
            - name: galera
              containerPort: 4567
            - name: ist
              containerPort: 4568
            - name: sst
              containerPort: 4444
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysql -u"${MARIADB_ROOT_USER}" -p"${password_aux}" -e "select * from mysql.wsrep_cluster_members;"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  password_aux="${MARIADB_ROOT_PASSWORD:-}"
                  if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                      password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                  fi
                  exec mysqladmin status -u"${MARIADB_ROOT_USER}" -p"${password_aux}"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 48
          resources:
            limits:
              cpu: 250m
              memory: 1536Mi
            requests:
              cpu: 50m
              memory: 768Mi
          volumeMounts:
            - name: previous-boot
              mountPath: /opt/bitnami/mariadb/.bootstrap
            - name: data
              mountPath: /bitnami/mariadb
            - name: mariadb-galera-config
              mountPath: /bitnami/conf/my.cnf
              subPath: my.cnf
      #   - name: metrics
      #     image: docker.io/bitnami/mysqld-exporter:0.15.1@sha256:11c5f44243b71d52316548be79248c6cc86f20b0132bf22a07c4c4b34b9a3660
      #     imagePullPolicy: "Always" # Temp
      #     env:
      #       - name: MARIADB_METRICS_EXTRA_FLAGS
      #         value: ""
      #       - name: MARIADB_ROOT_USER
      #         value: "root"
      #       - name: MARIADB_ROOT_PASSWORD
      #         valueFrom:
      #           secretKeyRef:
      #             name: mariadb-galera
      #             key: mariadb-root-password
      #     command:
      #       - /bin/bash
      #       - -ec
      #       - |
      #         password_aux="${MARIADB_ROOT_PASSWORD:-}"
      #         if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
      #             password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
      #         fi
      #         DATA_SOURCE_NAME="${MARIADB_ROOT_USER}:${password_aux}@(localhost:3306)/" /bin/mysqld_exporter $MARIADB_METRICS_EXTRA_FLAGS
      #     ports:
      #       - name: metrics
      #         containerPort: 9104
      #     livenessProbe:
      #       httpGet:
      #         path: /
      #         port: metrics
      #       initialDelaySeconds: 30
      #       timeoutSeconds: 5
      #     readinessProbe:
      #       httpGet:
      #         path: /
      #         port: metrics
      #       initialDelaySeconds: 5
      #       timeoutSeconds: 1
      #     resources:
      #       limits:
      #         cpu: 50m
      #         memory: 50Mi
      #       requests:
      #         cpu: 25m
      #         memory: 25Mi
      volumes:
        - name: previous-boot
          emptyDir: {}
        - name: mariadb-galera-config
          configMap:
            name: mariadb-galera-configuration
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: mariadb-galera
          app.kubernetes.io/instance: mariadb-galera
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "3Gi"
        storageClassName: rook-ceph-block
