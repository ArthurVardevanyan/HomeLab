apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: homeassistant
  namespace: homeassistant
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/instance: homeassistant
    velero.io/exclude-from-backup: "true"
spec:
  # dataSource:
  #   postgresCluster:
  #     clusterName: homeassistant
  #     repoName: repo1
  shutdown: false
  backups:
    pgbackrest:
      jobs:
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 24Mi
      # configuration:
      #   - secret:
      #       name: truenas-s3-backup
      global:
        repo1-retention-full: "1"
        repo1-retention-full-type: count
        # repo2-path: /homeassistant
        # repo2-retention-full: "2"
        # repo2-retention-full-type: count
        # repo2-s3-uri-style: path
      repoHost:
        resources:
          limits:
            memory: "32Mi"
            cpu: "45m"
          requests:
            memory: "16Mi"
            cpu: "15m"
      sidecars:
        pgbackrest:
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
            requests:
              memory: "16Mi"
              cpu: "10m"
        pgbackrestConfig:
          resources:
            limits:
              memory: "32Mi"
              cpu: "45m"
            requests:
              memory: "16Mi"
              cpu: "15m"
      repos:
        - name: repo1
          schedules:
            full: "0 7 * * 0"
            differential: "0 7 * * 1-6"
          volume:
            volumeClaimSpec:
              storageClassName: rook-ceph-block-ci
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 75Gi
        # - name: repo2
        #   s3:
        #     bucket: postgres
        #     endpoint: "minio.microshift.arthurvardevanyan.com"
        #     region: homelab
        #   schedules:
        #     full: "0 6 * * 0"
        #     differential: "0 6 * * 1-6"
  instances:
    - dataVolumeClaimSpec:
        storageClassName: rook-ceph-block-ci
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 35Gi
      name: ""
      sidecars:
        replicaCertCopy:
          resources:
            requests:
              memory: "24Mi"
              cpu: "5m"
            limits:
              memory: "48Mi"
              cpu: "10m"
      metadata:
        labels:
          velero.io/exclude-from-backup: "true"
      replicas: 2
      resources:
        requests:
          memory: "512Mi"
          cpu: "25m"
        limits:
          memory: "1Gi"
          cpu: "150m"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: homeassistant
                  postgres-operator.crunchydata.com/instance-set: "00"
              topologyKey: "kubernetes.io/hostname"
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/cluster: homeassistant
                    postgres-operator.crunchydata.com/instance-set: "00"
                topologyKey: topology.kubernetes.io/zone
  patroni:
    dynamicConfiguration:
      postgresql:
        pg_hba:
          - "host all all 0.0.0.0/0 trust"
  users:
    - name: homeassistant
      databases:
        - homeassistant
      password:
        type: "AlphaNumeric" # ASCII
      options: "SUPERUSER CREATEDB"
  databaseInitSQL:
    key: db-init.sql
    name: db-init
  monitoring:
    pgmonitor:
      exporter:
        resources:
          limits:
            memory: "32Mi"
            cpu: "10m"
          requests:
            memory: "16Mi"
            cpu: "5m"
  # userInterface:
  #   pgAdmin:
  #     dataVolumeClaimSpec:
  #       accessModes:
  #         - ReadWriteOnce
  #       resources:
  #         requests:
  #           storage: 25Mi
  #       storageClassName: rook-ceph-block-ci
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpu: 150m
  #         memory: 256Mi
  #       requests:
  #         cpu: 25m
  #         memory: 128Mi
  openshift: true
  port: 5432
  postgresVersion: 17
# ---
# apiVersion: postgres-operator.crunchydata.com/v1beta1
# kind: PGUpgrade
# metadata:
#   name: homeassistant-upgrade
#   namespace: homeassistant
# spec:
#   fromPostgresVersion: 15
#   postgresClusterName: homeassistant
#   toPostgresVersion: 17

# kubectl delete ResourceQuota -n homeassistant --all
# kubectl delete LimitRange -n homeassistant --all

# kubectl patch postgrescluster homeassistant -n homeassistant --type=merge \
#     -p '{"spec":{"shutdown":true}}'

# kubectl annotate postgrescluster homeassistant -n homeassistant  \
#     postgres-operator.crunchydata.com/allow-upgrade=homeassistant-upgrade

# kubectl patch postgrescluster homeassistant -n homeassistant --type "json" -p \
# '[{"op":"replace","path":"/spec/postgresVersion","value":17}]'

# kubectl patch postgrescluster homeassistant -n homeassistant --type=merge \
#     -p '{"spec":{"shutdown":false}}'
