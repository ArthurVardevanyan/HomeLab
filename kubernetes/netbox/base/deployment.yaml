---
# Source: netbox/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
  namespace: "netbox"
  labels:
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: netbox
    app.kubernetes.io/version: v4.0.0
    helm.sh/chart: netbox-5.0.0-beta9
    app.kubernetes.io/component: netbox
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: netbox
      app.kubernetes.io/instance: netbox
      app.kubernetes.io/component: netbox
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: netbox
        app.kubernetes.io/instance: netbox
        app.kubernetes.io/component: netbox
    spec:
      serviceAccountName: netbox-sa
      automountServiceAccountToken: false
      securityContext:
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: netbox
                  app.kubernetes.io/instance: netbox
                  app.kubernetes.io/name: netbox
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: init-dirs
          image: "registry.arthurvardevanyan.com/homelab/toolbox:not_latest"
          imagePullPolicy: "IfNotPresent"
          command: [/bin/sh, -c, mkdir -p /opt/unit/state /opt/unit/tmp]
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 1024Mi
              memory: 192Mi
            requests:
              cpu: 5m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: optunit
              mountPath: /opt/unit
      containers:
        - name: netbox
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/netbox-community/netbox:v4.0.0@sha256:619f123f65cb747dd5acac56283506ca9a82107bac27475fa7176e432e403877"
          imagePullPolicy: IfNotPresent
          env:
            - name: SUPERUSER_NAME
              value: "admin"
            - name: SUPERUSER_EMAIL
              value: "admin@example.com"
            - name: SKIP_STARTUP_SCRIPTS
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /login/
              port: http
            initialDelaySeconds: 0
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: ""
            - name: optunit
              mountPath: /opt/unit
            - name: secrets
              mountPath: /run/secrets/superuser_password
              subPath: superuser_password
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/superuser_api_token
              subPath: superuser_api_token
              readOnly: true
          resources:
            limits:
              cpu: 1
              ephemeral-storage: 1024Mi
              memory: 1Gi
            requests:
              cpu: 5m
              ephemeral-storage: 50Mi
              memory: 512Mi
      volumes:
        - name: config
          secret:
            secretName: netbox-config
        - name: secrets
          projected:
            sources:
              - secret:
                  name: "netbox-creds"
                  items:
                    # Used by netbox-docker entry scripts
                    - key: superuser_password
                      path: superuser_password
                    - key: superuser_api_token
                      path: superuser_api_token
                    # Used by our configuration
                    - key: email_password
                      path: email_password
                    - key: secret_key
                      path: secret_key
              - secret:
                  name: "netbox-creds"
                  items:
                    - key: "db_password"
                      path: db_password
              - secret:
                  name: "netbox-creds"
                  items:
                    - key: "redis_tasks_password"
                      path: redis_tasks_password
              - secret:
                  name: "netbox-creds"
                  items:
                    - key: "redis_cache_password"
                      path: redis_cache_password
        - name: netbox-tmp
          emptyDir:
            medium: Memory
        - name: optunit
          emptyDir:
            medium: Memory
        - name: media
          emptyDir: {}
---
# Source: netbox/templates/worker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-worker
  namespace: "netbox"
  labels:
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: netbox
    app.kubernetes.io/version: v4.0.0
    helm.sh/chart: netbox-5.0.0-beta9
    app.kubernetes.io/component: worker
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: netbox
      app.kubernetes.io/instance: netbox
      app.kubernetes.io/component: worker
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: netbox
        app.kubernetes.io/instance: netbox
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: netbox-sa
      automountServiceAccountToken: false
      securityContext:
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: worker
                  app.kubernetes.io/instance: netbox
                  app.kubernetes.io/name: netbox
              topologyKey: kubernetes.io/hostname
      containers:
        - name: netbox-worker
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/netbox-community/netbox:v4.0.0@sha256:619f123f65cb747dd5acac56283506ca9a82107bac27475fa7176e432e403877"
          command:
            - /opt/netbox/venv/bin/python
            - /opt/netbox/netbox/manage.py
            - rqworker
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              ephemeral-storage: 1024Mi
              memory: 512Mi
            requests:
              cpu: 5m
              ephemeral-storage: 50Mi
              memory: 192Mi
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: /opt/netbox/netbox/media
              subPath: ""
      volumes:
        - name: config
          secret:
            secretName: netbox-config
        - name: secrets
          projected:
            sources:
              - secret:
                  name: "netbox-creds"
                  items:
                    # Used by our configuration
                    - key: email_password
                      path: email_password
                    - key: secret_key
                      path: secret_key
              - secret:
                  name: "netbox-creds"
                  items:
                    - key: "db_password"
                      path: db_password
              - secret:
                  name: "netbox-creds"
                  items:
                    - key: "redis_tasks_password"
                      path: redis_tasks_password
              - secret:
                  name: "netbox-creds"
                  items:
                    - key: "redis_cache_password"
                      path: redis_cache_password
        - name: netbox-tmp
          emptyDir:
            medium: Memory
        - name: media
          emptyDir: {}
