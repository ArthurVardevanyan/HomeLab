# Source: stackrox-secured-cluster-services/templates/collector.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: collector
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 4.6.1
    helm.sh/chart: stackrox-secured-cluster-services-400.5.1
    service: collector
    app: collector
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    checkov.io/skip1: CKV_K8S_8=Not Supported
    checkov.io/skip2: CKV_K8S_9=Not Supported
    checkov.io/skip3: CKV_K8S_16=Security Tool
    checkov.io/skip4: CKV_K8S_20=Security Tool
    checkov.io/skip5: CKV_K8S_22=Security Tool
    checkov.io/skip6: CKV_K8S_27=Security Tool
    checkov.io/skip7: CKV_K8S_23=Security Tool
    checkov.io/skip8: CKV_K8S_28=Security Tool
    checkov.io/skip9: CKV_K8S_29=Security Tool
    checkov.io/skip10: CKV_K8S_30=Security Tool
    checkov.io/skip11: CKV_K8S_31=Security Tool
    checkov.io/skip12: CKV_K8S_37=Security Tool
    checkov.io/skip13: CKV_K8S_38=Security Tool
    checkov.io/skip14: CKV_K8S_40=OpenShift Injects Random UID
  name: collector
  namespace: stackrox
spec:
  selector:
    matchLabels:
      service: collector
  template:
    metadata:
      namespace: stackrox
      labels:
        service: collector
        app: collector
        app.kubernetes.io/component: collector
        app.kubernetes.io/instance: stackrox-secured-cluster-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-secured-cluster-services
        app.kubernetes.io/version: 4.6.1
        helm.sh/chart: stackrox-secured-cluster-services-400.5.1
      annotations:
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-secured-cluster-services
        meta.helm.sh/release-namespace: stackrox
        openshift.io/required-scc: privileged
        owner: stackrox
    spec:
      tolerations:
        - operator: Exists
      serviceAccountName: collector
      containers:
        - name: collector
          image: "quay.io/stackrox-io/collector-slim:4.6.1@sha256:7956e019af604d4f25480304a8523466b37c4a46685d9f2a11915de27d37c181"
          imagePullPolicy: IfNotPresent
          env:
            - name: COLLECTOR_CONFIG
              value: '{"tlsConfig":{"caCertPath":"/var/run/secrets/stackrox.io/certs/ca.pem","clientCertPath":"/var/run/secrets/stackrox.io/certs/cert.pem","clientKeyPath":"/var/run/secrets/stackrox.io/certs/key.pem"}}'
            - name: COLLECTION_METHOD
              value: CORE_BPF
            - name: GRPC_SERVER
              value: sensor.stackrox.svc:443
            - name: SNI_HOSTNAME
              value: "sensor.stackrox.svc"

          resources:
            limits:
              cpu: 50m
              memory: 512Mi
            requests:
              cpu: 25m
              memory: 256Mi
          securityContext:
            capabilities:
              drop:
                - NET_RAW
            privileged: true
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /host/proc
              name: proc-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /module
              name: tmpfs-module
            - mountPath: /host/etc
              name: etc-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /host/usr/lib
              name: usr-lib-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /host/sys
              name: sys-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /host/dev
              name: dev-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /run/secrets/stackrox.io/certs/
              name: certs
              readOnly: true
        - command:
            - stackrox/compliance
          env:
            - name: ROX_MEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: ROX_CALL_NODE_INVENTORY_ENABLED
              value: "true"
            - name: ROX_METRICS_PORT
              value: "disabled"
            - name: ROX_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: ROX_ADVERTISED_ENDPOINT
              value: "sensor.stackrox.svc:443"
            - name: ROX_NODE_SCANNING_ENDPOINT
              value: "127.0.0.1:8444"

          image: "quay.io/stackrox-io/main:4.6.1@sha256:ee4acf854561fb301b8d39463ab502a5ad70bdc509508de878e968ff2c72d958"
          imagePullPolicy: IfNotPresent
          name: compliance
          resources:
            limits:
              cpu: "50m"
              memory: 96Mi
            requests:
              cpu: 10m
              memory: 48Mi
          securityContext:
            runAsUser: 0
            readOnlyRootFilesystem: true

            seLinuxOptions:
              type: "container_runtime_t"

          volumeMounts:
            - mountPath: /etc/ssl/
              name: etc-ssl
            - mountPath: /etc/pki/ca-trust/
              name: etc-pki-volume
            - mountPath: /host
              name: host-root-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /run/secrets/stackrox.io/certs/
              name: certs
              readOnly: true
        - name: node-inventory
          image: "quay.io/stackrox-io/scanner-slim:4.6.1@sha256:06e6bdd632475863c752217794443da79465f65b9df658d32f900dca3af2b37c"
          imagePullPolicy: IfNotPresent
          command: ["/scanner", "--nodeinventory", "--config=", ""]
          ports:
            - containerPort: 8444
              name: grpc
          resources:
            limits:
              cpu: "100m"
              memory: 144Mi
            requests:
              cpu: 10m
              memory: 72Mi
          securityContext:
            privileged: true
          env:
            - name: ROX_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName

          volumeMounts:
            - mountPath: /host
              name: host-root-ro
              readOnly: true
              mountPropagation: HostToContainer
            - mountPath: /tmp/
              name: tmp-volume
            - mountPath: /cache
              name: cache-volume
      volumes:
        - hostPath:
            path: /proc
          name: proc-ro
        - emptyDir:
            medium: Memory
          name: tmpfs-module
        - hostPath:
            path: /etc
          name: etc-ro
        - hostPath:
            path: /usr/lib
          name: usr-lib-ro
        - hostPath:
            path: /sys/
          name: sys-ro
        - hostPath:
            path: /dev
          name: dev-ro
        - name: certs
          secret:
            secretName: collector-tls
            items:
              - key: collector-cert.pem
                path: cert.pem
              - key: collector-key.pem
                path: key.pem
              - key: ca.pem
                path: ca.pem
        - hostPath:
            path: /
          name: host-root-ro
        - name: etc-ssl
          emptyDir: {}
        - name: etc-pki-volume
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}
        - name: cache-volume
          emptyDir:
            sizeLimit: 200Mi
