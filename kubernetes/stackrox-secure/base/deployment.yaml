# Source: stackrox-secured-cluster-services/templates/admission-controller.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admission-control
  namespace: stackrox
  labels:
    app.kubernetes.io/component: admission-control
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 4.1.1
    helm.sh/chart: stackrox-secured-cluster-services-400.1.1
    app: admission-control
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  #replicas: 3
  minReadySeconds: 0
  selector:
    matchLabels:
      app: admission-control
  template:
    metadata:
      namespace: stackrox
      labels:
        app: admission-control
        app.kubernetes.io/component: admission-control
        app.kubernetes.io/instance: stackrox-secured-cluster-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-secured-cluster-services
        app.kubernetes.io/version: 4.1.1
        helm.sh/chart: stackrox-secured-cluster-services-400.1.1
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-secured-cluster-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      # Attempt to schedule these on master nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # node-role.kubernetes.io/master is replaced by node-role.kubernetes.io/control-plane from certain version
            # of k8s. We apply both to be compatible with any k8s version.
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 60
              podAffinityTerm:
                namespaces: ["stackrox"]
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchLabels:
                    app: admission-control
      serviceAccountName: admission-control
      containers:
        - image: "quay.io/stackrox-io/main:4.1.1"
          imagePullPolicy: IfNotPresent
          name: admission-control
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /ready
              port: 8443
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
          ports:
            - containerPort: 8443
              name: webhook
          command:
            - admission-control
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 25m
              memory: 50Mi
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: ROX_SENSOR_ENDPOINT
              value: sensor.stackrox.svc:443

          volumeMounts:
            - name: config
              mountPath: /run/config/stackrox.io/admission-control/config/
              readOnly: true
            - name: config-store
              mountPath: /var/lib/stackrox/admission-control/
            - name: ca
              mountPath: /run/secrets/stackrox.io/ca/
              readOnly: true
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: ssl
              mountPath: /etc/ssl
            - name: pki
              mountPath: /etc/pki/ca-trust/
            - name: additional-cas
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true

            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true

      volumes:
        - name: certs
          secret:
            secretName: admission-control-tls
            optional: true
            items:
              - key: admission-control-cert.pem
                path: cert.pem
              - key: admission-control-key.pem
                path: key.pem
              - key: ca.pem
                path: ca.pem
        - name: ca
          secret:
            secretName: service-ca
            optional: true
        - name: config
          configMap:
            name: admission-control
            optional: true
        - name: config-store
          emptyDir: {}
        - name: ssl
          emptyDir: {}
        - name: pki
          emptyDir: {}
        - name: additional-cas
          secret:
            secretName: additional-ca-sensor
            optional: true

        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-secured-cluster-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
---
# Source: stackrox-secured-cluster-services/templates/sensor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sensor
  namespace: stackrox
  labels:
    app.kubernetes.io/component: sensor
    app.kubernetes.io/instance: stackrox-secured-cluster-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-secured-cluster-services
    app.kubernetes.io/version: 4.1.1
    helm.sh/chart: stackrox-secured-cluster-services-400.1.1
    app: sensor
    auto-upgrade.stackrox.io/component: "sensor"
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-secured-cluster-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: sensor
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sensor
        app.kubernetes.io/component: sensor
        app.kubernetes.io/instance: stackrox-secured-cluster-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-secured-cluster-services
        app.kubernetes.io/version: 4.1.1
        helm.sh/chart: stackrox-secured-cluster-services-400.1.1
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8443,9443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-secured-cluster-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # Sensor is single-homed, so avoid preemptible nodes.
            - weight: 100
              preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                      - "true"
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
            - weight: 25
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
            # From v1.20 node-role.kubernetes.io/control-plane replaces node-role.kubernetes.io/master (removed in
            # v1.25). We apply both because our goal is not to run pods on control plane nodes for any version of k8s.
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      serviceAccountName: sensor
      containers:
        - image: "quay.io/stackrox-io/main:4.1.1"
          imagePullPolicy: IfNotPresent
          name: sensor
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /ready
              port: 9443
          ports:
            - containerPort: 8443
              name: api
            - containerPort: 9443
              name: webhook
          command:
            - kubernetes-sensor
          resources:
            limits:
              cpu: 150m
              memory: 768Mi
            requests:
              cpu: 50m
              memory: 384Mi
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ROX_CENTRAL_ENDPOINT
              value: central.stackrox.svc:443
            - name: ROX_ADVERTISED_ENDPOINT
              value: sensor.stackrox.svc:443
            - name: ROX_OPENSHIFT_API
              value: "true"
            - name: ROX_HELM_CLUSTER_CONFIG_FP
              value: "<path:secret/data/homelab/stackrox/homelab#config-fingerprint>"

          volumeMounts:
            - name: varlog
              mountPath: /var/log/stackrox/
            - name: sensor-etc-ssl-volume
              mountPath: /etc/ssl/
            - name: sensor-etc-pki-volume
              mountPath: /etc/pki/ca-trust/
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: additional-ca-volume
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true
            - name: cache
              mountPath: /var/cache/stackrox
            - name: helm-cluster-config
              mountPath: /run/secrets/stackrox.io/helm-cluster-config/
              readOnly: true
            - name: helm-effective-cluster-name
              mountPath: /run/secrets/stackrox.io/helm-effective-cluster-name/
              readOnly: true

            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true

      volumes:
        - name: certs
          secret:
            secretName: sensor-tls
            items:
              - key: sensor-cert.pem
                path: cert.pem
              - key: sensor-key.pem
                path: key.pem
              - key: ca.pem
                path: ca.pem
        - name: sensor-etc-ssl-volume
          emptyDir: {}
        - name: sensor-etc-pki-volume
          emptyDir: {}
        - name: additional-ca-volume
          secret:
            secretName: additional-ca-sensor
            optional: true
        - name: varlog
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: helm-cluster-config
          secret:
            secretName: helm-cluster-config
            optional: true
        - name: helm-effective-cluster-name
          secret:
            secretName: helm-effective-cluster-name
            optional: true

        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-secured-cluster-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
