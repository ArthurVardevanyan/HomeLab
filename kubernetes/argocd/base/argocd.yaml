apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  name: argocd
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    app.kubernetes.io/instance: argocd
spec:
  notifications:
    enabled: true
    replicas: 2
    resources:
      limits:
        cpu: 20m
        memory: 96Mi
      requests:
        cpu: 10m
        memory: 48Mi
  monitoring:
    enabled: true
  server:
    replicas: 2
    host: argocd.apps.okd.arthurvardevanyan.com
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 100Mi
    insecure: true
    route:
      enabled: true
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
    service:
      type: ""
  grafana:
    enabled: false
  prometheus:
    enabled: false
  initialSSHKnownHosts: {}
  disableAdmin: true
  usersAnonymousEnabled: false
  rbac:
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
  version: sha256:f1a17da2e1d121b6a891a74805af2476febc145902b99d6bb4baafcf24b50e32 # v2.10.8
  repo:
    replicas: 3
    version: sha256:f1a17da2e1d121b6a891a74805af2476febc145902b99d6bb4baafcf24b50e32 # v2.10.8
    mountsatoken: true
    serviceaccount: argocd-repo-server
    resources:
      limits:
        cpu: "1500m"
        memory: 1Gi
        ephemeral-storage: 6Gi
      requests:
        cpu: 50m
        memory: 150Mi
        ephemeral-storage: 256Mi
    initContainers:
      - name: download-tools
        imagePullPolicy: IfNotPresent
        image: registry.access.redhat.com/ubi9/ubi:9.4-947@sha256:770cf07083e1c85ae69c25181a205b7cdef63c11b794c89b3b487d4670b4c328
        env:
          - name: AVP_VERSION
            value: 1.17.0
          - name: KUSTOMIZE_VERSION
            value: 5.4.1
        command: [sh, -c]
        args:
          - >-
            cd /custom-tools &&
            curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
            chmod +x argocd-vault-plugin &&
            curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv$(KUSTOMIZE_VERSION)/kustomize_v$(KUSTOMIZE_VERSION)_linux_amd64.tar.gz -o kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz &&
            tar -xzf kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz --no-same-owner &&
            chmod +x kustomize &&
            rm kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz
        volumeMounts:
          - mountPath: /custom-tools
            name: custom-tools
    sidecarContainers:
      - name: avp-kustomize
        command: [/var/run/argocd/argocd-cmp-server]
        imagePullPolicy: IfNotPresent
        image: registry.access.redhat.com/ubi9/ubi:9.4-947@sha256:770cf07083e1c85ae69c25181a205b7cdef63c11b794c89b3b487d4670b4c328
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
            ephemeral-storage: 6Gi
          requests:
            cpu: 50m
            memory: 150Mi
            ephemeral-storage: 256Mi
        env:
          - name: AVP_TYPE
            value: vault
          - name: AVP_AUTH_TYPE
            value: k8s
          - name: AVP_K8S_ROLE
            value: argocd
          - name: VAULT_ADDR
            value: https://vault.arthurvardevanyan.com
        volumeMounts:
          - name: custom-tools
            subPath: argocd-vault-plugin
            mountPath: /usr/local/bin/argocd-vault-plugin
          - name: custom-tools
            subPath: kustomize
            mountPath: /usr/local/bin/kustomize
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: avp-kustomize.yaml
            name: cmp-plugin
          - mountPath: /tmp
            name: cmp-tmp
    volumes:
      - configMap:
          name: cmp-plugin
        name: cmp-plugin
      - emptyDir:
          medium: Memory
        name: cmp-tmp
      - name: custom-tools
        emptyDir: {}
  sso:
    provider: dex
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 50Mi
  ha:
    enabled: false
  tls:
    ca: {}
  redis:
    enabled: true
    remote: "argocd-dragonfly:6379"
  controller:
    parallelismLimit: 25
    sharding:
      enabled: true
      replicas: 1
    processors:
      operation: 25
      status: 50
    resources:
      limits:
        cpu: "2"
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 1Gi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
