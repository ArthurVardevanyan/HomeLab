# Source: traefik/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: traefik
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/instance: traefik
    helm.sh/chart: traefik-25.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    checkov.io/skip1: CKV_K8S_38=Ingress Controller Requires API Server Access
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
      app.kubernetes.io/instance: traefik
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  minReadySeconds: 0
  template:
    metadata:
      annotations:
        enable.version-checker.io/traefik: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9100"
      labels:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/instance: traefik
        helm.sh/chart: traefik-25.0.0
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: traefik
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      containers:
        - image: docker.io/traefik:v2.11.2@sha256:c6f6001dd1fc09fb0ae47ad2198102c40a8d9586c02d6040d561fd4fb7e91f45
          imagePullPolicy: IfNotPresent
          name: traefik
          resources:
            limits:
              cpu: 100m
              memory: 150M
            requests:
              cpu: 25m
              memory: 75M
          readinessProbe:
            httpGet:
              path: /ping
              port: 8000
              scheme: HTTP
            failureThreshold: 1
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 8000
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: "metrics"
              containerPort: 9100
              protocol: "TCP"
            - name: "traefik"
              containerPort: 9000
              protocol: "TCP"
            - name: "web"
              containerPort: 8000
              protocol: "TCP"
            - name: "websecure"
              containerPort: 8443
              protocol: "TCP"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
          args:
            - --metrics.prometheus=true
            - --metrics.prometheus.entrypoint=metrics
            - --global.checknewversion
            - --entryPoints.traefik.address=:9000/tcp
            - --entryPoints.web.address=:8000/tcp
            - --entryPoints.websecure.address=:8443/tcp
            - --entrypoints.metrics.address=:9100/tcp
            - --api.dashboard=true
            - --ping=true
            - --ping.entryPoint=web
            - --providers.kubernetescrd
            - --providers.kubernetesingress
            - --api.dashboard=true
            - --log.level=INFO
            - --serversTransport.insecureSkipVerify=true
            - --api.insecure=true
            - --entryPoints.web.proxyProtocol.trustedIPs=10.0.0.2
            - --entryPoints.websecure.proxyProtocol.trustedIPs=10.0.0.2
            - --entryPoints.metrics.proxyProtocol.trustedIPs=10.0.0.2
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
        runAsGroup: 65532
        fsGroup: 65532
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
