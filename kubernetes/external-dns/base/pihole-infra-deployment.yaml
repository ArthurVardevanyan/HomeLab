---
# Source: external-dns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns-okd-infra
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns-okd-infra
    app.kubernetes.io/instance: external-dns-okd-infra
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns-okd-infra
      app.kubernetes.io/instance: external-dns-okd-infra
  strategy:
    type: RollingUpdate #Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns-okd-infra
        app.kubernetes.io/instance: external-dns-okd-infra
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: external-dns-okd-infra
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: external-dns
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: external-dns-okd-infra
          securityContext:
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 50m
              memory: 192Mi
            requests:
              cpu: 5m
              memory: 96Mi
          image: registry.k8s.io/external-dns/external-dns:v0.18.0@sha256:f90738b35be265d50141d5c21e6f6049c3da7cd761682c40214117a2951b80bc
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=info
            - --log-format=text
            - --interval=1m
            - --source=service
            # - --source=ingress
            - --source=openshift-route
            - --source=crd
            - --crd-source-apiversion=externaldns.k8s.io/v1alpha1
            - --crd-source-kind=DNSEndpoint
            - --registry=noop
            - --provider=pihole
            - --pihole-api-version=6
            # Change this to the actual address of your Pi-hole web server
            - "--pihole-server=https://pihole-infra.app.okd.homelab.arthurvardevanyan.com"
            - --annotation-filter=externaldns.k8s.io in (pihole)
            # - --policy=sync #upsert-only
          envFrom:
            - secretRef:
                # Change this if you gave the secret a different name
                name: pihole-password
          ports:
            - name: http
              protocol: TCP
              containerPort: 7979
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
---
# Source: external-dns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns-microshift-infra
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns-microshift-infra
    app.kubernetes.io/instance: external-dns-microshift-infra
    app.kubernetes.io/version: "0.15.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns-microshift-infra
      app.kubernetes.io/instance: external-dns-microshift-infra
  strategy:
    type: RollingUpdate #Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns-microshift-infra
        app.kubernetes.io/instance: external-dns-microshift-infra
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: external-dns-microshift-infra
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: external-dns
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: external-dns-microshift-infra
          securityContext:
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 50m
              memory: 192Mi
            requests:
              cpu: 5m
              memory: 96Mi
          image: registry.k8s.io/external-dns/external-dns:v0.18.0@sha256:f90738b35be265d50141d5c21e6f6049c3da7cd761682c40214117a2951b80bc
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=info
            - --log-format=text
            - --interval=1m
            - --source=service
            # - --source=ingress
            - --source=openshift-route
            - --source=crd
            - --crd-source-apiversion=externaldns.k8s.io/v1alpha1
            - --crd-source-kind=DNSEndpoint
            - --registry=noop
            - --provider=pihole
            - --pihole-api-version=6
            # Change this to the actual address of your Pi-hole web server
            - --pihole-server=https://pihole-infra.arthurvardevanyan.com
            - --annotation-filter=externaldns.k8s.io in (pihole)
            #- --policy=sync #upsert-only
          envFrom:
            - secretRef:
                # Change this if you gave the secret a different name
                name: pihole-password
          ports:
            - name: http
              protocol: TCP
              containerPort: 7979
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
