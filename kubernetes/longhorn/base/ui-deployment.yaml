---
# Source: longhorn/templates/deployment-ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: longhorn
    app.kubernetes.io/instance: longhorn
    app.kubernetes.io/version: v1.5.3
    app: longhorn-ui
  name: longhorn-ui
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/version: v1.5.3
        app: longhorn-ui
      annotations:
        enable.version-checker.io/longhorn-ui: "true"
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: node-role.kubernetes.io/infra
          effect: NoSchedule
          operator: Exists
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - longhorn-ui
                topologyKey: kubernetes.io/hostname
      serviceAccountName: longhorn-ui-service-account
      automountServiceAccountToken: true
      containers:
        - name: oauth-proxy
          image: quay.io/openshift/origin-oauth-proxy@sha256:a7dff785d821acc4b972d94964947713fade45f007dedb5deee17a2869bf5d24
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 25m
              memory: 24Mi
            limits:
              cpu: 75m
              memory: 48Mi
          ports:
            - containerPort: 8443
              name: public
          args:
            - --https-address=:8443
            - --provider=openshift
            - --openshift-service-account=longhorn-ui-service-account
            - --upstream=http://localhost:8000
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=SECRET
            - --openshift-sar={"namespace":"longhorn-system","group":"longhorn.io","resource":"setting","verb":"delete"}
          volumeMounts:
            - mountPath: /etc/tls/private
              name: longhorn-ui-tls
        - name: longhorn-ui
          image: longhornio/longhorn-ui:v1.5.3@sha256:c0b1933e63508e72863b75523f363139c065e9936c0726141064d33d071cfcc3
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx/
            - name: nginx-config
              mountPath: /var/config/nginx/
            - name: var-run
              mountPath: /var/run/
          resources:
            requests:
              cpu: 25m
              memory: 16Mi
            limits:
              cpu: 100m
              memory: 32Mi
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: LONGHORN_MANAGER_IP
              value: "http://longhorn-backend:9500"
            - name: LONGHORN_UI_PORT
              value: "8000"
      volumes:
        - name: longhorn-ui-tls
          secret:
            secretName: longhorn-ui-tls
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: nginx-config
        - emptyDir: {}
          name: var-run
