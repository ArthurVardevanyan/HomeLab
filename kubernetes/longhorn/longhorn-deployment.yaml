apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: longhorn-manager
  name: longhorn-manager
  namespace: longhorn-system
spec:
  selector:
    matchLabels:
      app: longhorn-manager
  template:
    metadata:
      labels:
        app: longhorn-manager
      annotations:
        enable.version-checker.io/longhorn-manager: "true"
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
        - name: longhorn-manager
          image: longhornio/longhorn-manager:v1.2.4
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
              memory: 250M
            limits:
              cpu: 750m
              memory: 500M
          command:
            - longhorn-manager
            - -d
            - daemon
            - --engine-image
            - longhornio/longhorn-engine:v1.2.4
            - --instance-manager-image
            - longhornio/longhorn-instance-manager:v1_20210731
            - --share-manager-image
            - longhornio/longhorn-share-manager:v1_20210914
            - --backing-image-manager-image
            - longhornio/backing-image-manager:v2_20210820
            - --manager-image
            - longhornio/longhorn-manager:v1.2.4
            - --service-account
            - longhorn-service-account
          ports:
            - containerPort: 9500
              name: manager
          readinessProbe:
            tcpSocket:
              port: 9500
          volumeMounts:
            - name: dev
              mountPath: /host/dev/
            - name: proc
              mountPath: /host/proc/
            - name: longhorn
              mountPath: /var/lib/longhorn/
              mountPropagation: Bidirectional
            - name: longhorn-default-setting
              mountPath: /var/lib/longhorn-setting/
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DEFAULT_SETTING_PATH
              value: /var/lib/longhorn-setting/default-setting.yaml
      volumes:
        - name: dev
          hostPath:
            path: /dev/
        - name: proc
          hostPath:
            path: /proc/
        - name: longhorn
          hostPath:
            path: /var/lib/longhorn/
        - name: longhorn-default-setting
          configMap:
            name: longhorn-default-setting
      serviceAccountName: longhorn-service-account
  updateStrategy:
    rollingUpdate:
      maxUnavailable: "100%"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: longhorn-ui
  name: longhorn-ui
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      labels:
        app: longhorn-ui
      annotations:
        enable.version-checker.io/longhorn-ui: "true"
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
    spec:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - "true"
      containers:
        - name: longhorn-ui
          image: longhornio/longhorn-ui:v1.2.4
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 25m
              memory: 5M
            limits:
              cpu: 50m
              memory: 10M
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: LONGHORN_MANAGER_IP
              value: "http://longhorn-backend:9500"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: longhorn-driver-deployer
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: longhorn-driver-deployer
  template:
    metadata:
      labels:
        app: longhorn-driver-deployer
      annotations:
        enable.version-checker.io/longhorn-driver-deployer: "true"
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - "true"
      securityContext:
        fsGroup: 19500
        runAsGroup: 19500
        runAsNonRoot: true
        runAsUser: 19500
      initContainers:
        - name: wait-longhorn-manager
          image: longhornio/longhorn-manager:v1.2.4
          command:
            [
              "sh",
              "-c",
              'while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1) != "200" ]; do echo waiting; sleep 2; done',
            ]
      containers:
        - name: longhorn-driver-deployer
          image: longhornio/longhorn-manager:v1.2.4
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsGroup: 19500
            runAsUser: 19500
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - all
          resources:
            requests:
              cpu: 5m
              memory: 15M
            limits:
              cpu: 10m
              memory: 25M
          command:
            - longhorn-manager
            - -d
            - deploy-driver
            - --manager-image
            - longhornio/longhorn-manager:v1.2.4
            - --manager-url
            - http://longhorn-backend:9500/v1
          env:
            #- name: KUBELET_ROOT_DIR
            #  value: /k3s/agent/kubelet
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
      serviceAccountName: longhorn-service-account
