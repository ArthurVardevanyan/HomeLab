kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: pihole-infra
  namespace: pihole
  labels:
    app: pihole-infra
    app.kubernetes.io/instance: pihole
  annotations:
    checkov.io/skip1: CKV_K8S_40=OpenShift Injects Random UID
spec:
  replicas: 1
  serviceName: pihole
  selector:
    matchLabels:
      app: pihole-infra
  template:
    metadata:
      labels:
        app: pihole-infra
      annotations:
        enable.version-checker.io/pihole: "true"
        k8s.v1.cni.cncf.io/networks: |
          [{
            "name": "bond4-nad-vlan11",
            "namespace": "default",
            "mac": "10:01:01:01:10:11",
            "ips": ["10.101.11.5/24"],
            "default-route": ["10.101.11.1"]
          }]
    spec:
      hostname: pihole-infra
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
        runAsNonRoot: true
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 10.101.11.1
      containers:
        - image: docker.io/pihole/pihole:2025.07.1@sha256:f84c1654bfbafc44e2ac8447a1fa2fb739eae66395b4c179d2c59cb93e1321f3
          imagePullPolicy: IfNotPresent
          name: pihole-infra
          env:
            - name: TZ
              value: "America/Detroit"
            - name: FTLCONF_dns_dnssec
              value: "false"
            - name: FTLCONF_dns_listeningMode
              value: all
            - name: FTLCONF_dns_cache_size
              value: "10000"
            - name: FTLCONF_dns_upstreams
              value: "10.101.11.1"
            - name: FTLCONF_misc_etc_dnsmasq_d
              value: "true"
          securityContext:
            runAsNonRoot: false
            privileged: true
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
          readinessProbe:
            exec:
              command: ["dig", "@127.0.0.1"] #, "cloudflare.com"]
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          livenessProbe:
            tcpSocket:
              port: dns-tcp
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 5
          ports:
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
              # hostPort: 53
            - name: web
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: etc-pihole
              mountPath: /etc/pihole
            - name: etc-dnsmasq
              mountPath: /etc/dnsmasq.d
            - name: var-log
              mountPath: /var/log/pihole
            - name: wildcard-dns
              mountPath: "/etc/dnsmasq.d/02-my-wildcard-dns.conf"
              subPath: "02-my-wildcard-dns.conf"
            - name: wildcard-dns
              mountPath: "/etc/dnsmasq.d/02-custom-settings.conf"
              subPath: "02-custom-settings.conf"
            - name: wildcard-dns
              mountPath: "/etc/dnsmasq.d/99-my-settings.conf"
              subPath: "99-my-settings.conf"
            - mountPath: /dev/shm
              name: dshm
          resources:
            limits:
              cpu: 500m
              memory: 3Gi
              ephemeral-storage: 30Gi
            requests:
              cpu: 25m
              memory: 1Gi
              ephemeral-storage: 30Gi
        - name: pihole-exporter
          securityContext:
            runAsNonRoot: false
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              cpu: 50m
              memory: 192Mi
            requests:
              cpu: 5m
              memory: 96Mi
          image: docker.io/ekofr/pihole-exporter:v1.0.1@sha256:c33eec2a8308fa510608b93d4921bb62f75f6132f8792b24e63972835f624496
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9617
              name: metrics
          env:
            - name: PIHOLE_HOSTNAME
              value: "pihole-okd-infra"
            - name: PORT
              value: "9617"
          envFrom:
            - secretRef:
                # Change this if you gave the secret a different name
                name: pihole-password
      automountServiceAccountToken: false
      serviceAccountName: pihole
      volumes:
        - name: etc-pihole
          persistentVolumeClaim:
            claimName: infra-etc-pihole
        - name: etc-dnsmasq
          persistentVolumeClaim:
            claimName: infra-etc-dnsmasq
        - name: wildcard-dns
          configMap:
            name: wildcard-dns
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 512Mi
        - name: var-log
          emptyDir:
            sizeLimit: 25Gi
