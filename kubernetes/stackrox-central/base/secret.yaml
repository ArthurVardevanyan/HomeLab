# ---
# # Source: stackrox-central-services/templates/01-central-04-htpasswd-secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: central-htpasswd
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/component: central
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": "keep"
# type: Opaque
# data:
#   htpasswd: <path:secret/data/homelab/stackrox/central#central-htpasswd | base64encode>
# ---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: central-htpasswd
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: central-htpasswd
    #creationPolicy: "Merge"
  data:
    - secretKey: htpasswd
      remoteRef:
        key: homelab/stackrox/central
        property: central-htpasswd

# ---
# # Source: stackrox-central-services/templates/01-central-05-tls-secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: central-tls
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/component: central
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": "keep"
# type: Opaque
# data:
#   ca.pem: <path:secret/data/homelab/stackrox/common#ca-pem | base64encode>
#   ca-key.pem: <path:secret/data/homelab/stackrox/central#central-tls-ca-key-pem | base64encode>
#   jwt-key.pem: <path:secret/data/homelab/stackrox/central#central-tls-jwt-key-pem | base64encode>
#   cert.pem: <path:secret/data/homelab/stackrox/central#central-tls-cert-pem | base64encode>
#   key.pem: <path:secret/data/homelab/stackrox/central#central-tls-key-pem | base64encode>
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: central-tls
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: central-tls
    #creationPolicy: "Merge"
  data:
    - secretKey: ca.pem
      remoteRef:
        key: homelab/stackrox/common
        property: ca-pem
    - secretKey: ca-key.pem
      remoteRef:
        key: homelab/stackrox/central
        property: central-tls-ca-key-pem
    - secretKey: jwt-key.pem
      remoteRef:
        key: homelab/stackrox/central
        property: central-tls-jwt-key-pem
    - secretKey: cert.pem
      remoteRef:
        key: homelab/stackrox/central
        property: central-tls-cert-pem
    - secretKey: key.pem
      remoteRef:
        key: homelab/stackrox/central
        property: central-tls-key-pem
# ---
# # Source: stackrox-central-services/templates/01-central-12-central-db.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: central-db-password
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/component: central
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": keep
# type: Opaque
# stringData:
#   password: |
#     <path:secret/data/homelab/stackrox/db#password>
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: central-db-password
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: central-db-password
    #creationPolicy: "Merge"
  data:
    - secretKey: password
      remoteRef:
        key: homelab/stackrox/db
        property: password
# ---
# # Source: stackrox-central-services/templates/02-scanner-02-db-password-secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: scanner-db-password
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/component: scanner
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": keep
# type: Opaque
# data:
#   password: <path:secret/data/homelab/stackrox/central#scanner-db-password | base64encode>
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: scanner-db-password
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: scanner-db-password
    #creationPolicy: "Merge"
  data:
    - secretKey: password
      remoteRef:
        key: homelab/stackrox/central
        property: scanner-db-password
# ---
# # Source: stackrox-central-services/templates/02-scanner-03-tls-secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: scanner-tls
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/component: scanner
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": keep
# type: Opaque
# data:
#   ca.pem: <path:secret/data/homelab/stackrox/common#ca-pem | base64encode>
#   cert.pem: <path:secret/data/homelab/stackrox/central#scanner-tls-cert-pem | base64encode>
#   key.pem: <path:secret/data/homelab/stackrox/central#scanner-tls-key-pem | base64encode>
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: scanner-tls
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: scanner-tls
    #creationPolicy: "Merge"
  data:
    - secretKey: ca.pem
      remoteRef:
        key: homelab/stackrox/common
        property: ca-pem
    - secretKey: cert.pem
      remoteRef:
        key: homelab/stackrox/central
        property: scanner-tls-cert-pem
    - secretKey: key.pem
      remoteRef:
        key: homelab/stackrox/central
        property: scanner-tls-key-pem
# ---
# # Source: stackrox-central-services/templates/02-scanner-03-tls-secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: scanner-db-tls
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/component: scanner
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": "keep"
# type: Opaque
# data:
#   ca.pem: <path:secret/data/homelab/stackrox/common#ca-pem | base64encode>
#   cert.pem: <path:secret/data/homelab/stackrox/central#scanner-db-tls-cert-pem | base64encode>
#   key.pem: <path:secret/data/homelab/stackrox/central#scanner-db-tls-key-pem | base64encode>
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: scanner-db-tls
  namespace: stackrox
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  target:
    name: scanner-db-tls
    #creationPolicy: "Merge"
  data:
    - secretKey: ca.pem
      remoteRef:
        key: homelab/stackrox/common
        property: ca-pem
    - secretKey: cert.pem
      remoteRef:
        key: homelab/stackrox/central
        property: scanner-db-tls-cert-pem
    - secretKey: key.pem
      remoteRef:
        key: homelab/stackrox/central
        property: scanner-db-tls-key-pem
# ---
# # Source: stackrox-central-services/templates/99-generated-values-secret.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: stackrox-generated-kqf6b6
#   namespace: stackrox
#   labels:
#     app.kubernetes.io/instance: stackrox-central-services
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: stackrox
#     app.kubernetes.io/part-of: stackrox-central-services
#     app.kubernetes.io/version: "4"
#     helm.sh/chart: stackrox-central-services-400
#   annotations:
#     email: support@stackrox.com
#     meta.helm.sh/release-name: stackrox-central-services
#     meta.helm.sh/release-namespace: stackrox
#     owner: stackrox
#     # "helm.sh/hook": "pre-install,pre-upgrade"
#     # "helm.sh/resource-policy": "keep"
#     #"helm.sh/hook-delete-policy": "never"
# stringData:
#   generated-values.yaml: |
#     # The following values were generated by the StackRox Central Services Helm chart.
#     # You can pass this file to `helm install` via the `-f` parameter, which in conjunction
#     # with your local values files and values specified via `--set` will allow you to
#     # deterministically reproduce the deployment.
#     ca:
#       cert: |
#         <path:secret/data/homelab/stackrox/common#ca-pem>
#       key: |
#         <path:secret/data/homelab/stackrox/central#central-tls-ca-key-pem>
#     central:
#       jwtSigner:
#         key: |
#         <path:secret/data/homelab/stackrox/central#central-tls-jwt-key-pem>
#       serviceTLS:
#         cert: |
#           <path:secret/data/homelab/stackrox/central#central-tls-cert-pem>
#         key: |
#           <path:secret/data/homelab/stackrox/central#central-tls-key-pem>
#     scanner:
#       dbPassword:
#         value: <path:secret/data/homelab/stackrox/central#scanner-db-password>
#       dbServiceTLS:
#         cert: |
#           <path:secret/data/homelab/stackrox/central#scanner-db-tls-cert-pem>
#         key: |
#           <path:secret/data/homelab/stackrox/central#scanner-db-tls-key-pem>
#       serviceTLS:
#         cert: |
#           <path:secret/data/homelab/stackrox/central#scanner-tls-cert-pem>
#         key: |
#           <path:secret/data/homelab/stackrox/central#scanner-tls-key-pem>
