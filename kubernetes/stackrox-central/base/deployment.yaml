---
# Source: stackrox-central-services/templates/01-central-13-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central
  namespace: stackrox
  labels:
    app.kubernetes.io/component: central
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
    app: central
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    checkov.io/skip1: CKV_K8S_8=Not Supported
    checkov.io/skip2: CKV_K8S_20=Security Tool
    checkov.io/skip3: CKV_K8S_28=Security Tool
    checkov.io/skip4: CKV_K8S_29=Security Tool
    checkov.io/skip5: CKV_K8S_31=Security Tool
    checkov.io/skip6: CKV_K8S_37=Security Tool
    checkov.io/skip7: CKV_K8S_38=Security Tool
    checkov.io/skip8: CKV_K8S_40=OpenShift Injects Random UID
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: central
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: central
        app.kubernetes.io/component: central
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
        openshift.io/required-scc: nonroot-v2
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                      - "true"
              weight: 100
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
              weight: 50
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
              weight: 25
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
      serviceAccountName: central
      securityContext:
        fsGroup: 4000
        runAsUser: 4000
      containers:
        - name: central
          image: "quay.io/stackrox-io/main:4.8.0@sha256:b46f3af214cc748c61a044865e8c52ae318ec1f5fa6edede4eef66b14d38095d"
          command:
            - /stackrox/central-entrypoint.sh
          ports:
            - containerPort: 8443
              name: api
            - containerPort: 9091
              name: monitoring-tls
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /v1/ping
              port: 8443
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 1500m
              memory: 4Gi
          securityContext:
            capabilities:
              drop: ["NET_RAW"]
            readOnlyRootFilesystem: true
          env:
            - name: ROX_MEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ROX_TELEMETRY_ENDPOINT
              value: "https://console.redhat.com/connections/api"
            - name: ROX_TELEMETRY_API_WHITELIST
              value: "/api/splunk/ta/*,/v1/auth/m2m/exchange,/api/cli/download/*"
            - name: ROX_OFFLINE_MODE
              value: "false"
            - name: ROX_ENABLE_OPENSHIFT_AUTH
              value: "true"
            - name: ROX_OPENSHIFT
              value: "true"
            - name: ROX_ENABLE_SECURE_METRICS
              value: "true"
            - name: ROX_INSTALL_METHOD
              value: "helm"
            - name: ROX_SCANNER_V4
              value: "true"

          volumeMounts:
            - name: varlog
              mountPath: /var/log/stackrox/
            - name: central-tmp-volume
              mountPath: /tmp
            - name: central-etc-ssl-volume
              mountPath: /etc/ssl
            - name: central-etc-pki-volume
              mountPath: /etc/pki/ca-trust
            - name: central-certs-volume
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: central-default-tls-cert-volume
              mountPath: /run/secrets/stackrox.io/default-tls-cert/
              readOnly: true
            - name: central-htpasswd-volume
              mountPath: /run/secrets/stackrox.io/htpasswd/
              readOnly: true
            - name: central-jwt-volume
              mountPath: /run/secrets/stackrox.io/jwt/
              readOnly: true
            - name: additional-ca-volume
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true
            - name: central-license-volume
              mountPath: /run/secrets/stackrox.io/central-license/
              readOnly: true
            - name: central-config-volume
              mountPath: /etc/stackrox
            - name: proxy-config-volume
              mountPath: /run/secrets/stackrox.io/proxy-config/
              readOnly: true
            - name: endpoints-config-volume
              mountPath: /etc/stackrox.d/endpoints/
              readOnly: true
            - name: central-db-password
              mountPath: /run/secrets/stackrox.io/db-password
            - name: central-external-db-volume
              mountPath: /etc/ext-db
            - name: central-bound-sa-token
              mountPath: /var/run/secrets/openshift/serviceaccount
              readOnly: true
            - name: monitoring-tls
              mountPath: /run/secrets/stackrox.io/monitoring-tls
              readOnly: true

            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true

      volumes:
        - name: varlog
          emptyDir: {}
        - name: central-tmp-volume
          emptyDir: {}
        - name: central-etc-ssl-volume
          emptyDir: {}
        - name: central-etc-pki-volume
          emptyDir: {}
        - name: central-certs-volume
          secret:
            secretName: central-tls
        - name: central-default-tls-cert-volume
          secret:
            secretName: central-default-tls-cert
            optional: true
        - name: central-htpasswd-volume
          secret:
            secretName: central-htpasswd
            optional: true
        - name: central-jwt-volume
          secret:
            secretName: central-tls
            items:
              - key: jwt-key.pem
                path: jwt-key.pem
        - name: additional-ca-volume
          secret:
            secretName: additional-ca
            optional: true
        - name: central-license-volume
          secret:
            secretName: central-license
            optional: true
        - name: central-config-volume
          configMap:
            name: central-config
            optional: true
        - name: proxy-config-volume
          secret:
            secretName: proxy-config
            optional: true
        - name: endpoints-config-volume
          configMap:
            name: central-endpoints
        - name: central-db-password
          secret:
            secretName: central-db-password
        - name: central-external-db-volume
          configMap:
            name: central-external-db
            optional: true
        - name: central-bound-sa-token
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  path: token
                  audience: openshift
                  expirationSeconds: 3600
        - name: monitoring-tls
          secret:
            secretName: central-monitoring-tls

        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-central-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
---
# Source: stackrox-central-services/templates/02-config-controller-02-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-controller
  namespace: stackrox
  labels:
    app: config-controller
    app.kubernetes.io/component: config-controller
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: config-controller
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: config-controller
        app.kubernetes.io/component: config-controller
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                      - "true"
              weight: 100
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
              weight: 50
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
              weight: 25
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
      serviceAccountName: config-controller
      containers:
        - name: manager
          image: "quay.io/stackrox-io/main:4.8.0@sha256:b46f3af214cc748c61a044865e8c52ae318ec1f5fa6edede4eef66b14d38095d"
          command:
            - /stackrox/bin/config-controller
          args:
            - --health-probe-bind-address=:8081
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
            failureThreshold: 50
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /run/secrets/stackrox.io/certs/
              name: central-certs-volume
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: central-certs-volume
          secret:
            defaultMode: 420
            items:
              - key: ca.pem
                path: ca.pem
            secretName: central-tls
---
# Source: stackrox-central-services/templates/02-scanner-06-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner
  namespace: stackrox
  labels:
    app: scanner
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    checkov.io/skip1: CKV_K8S_8=Not Supported
    checkov.io/skip2: CKV_K8S_20=Security Tool
    checkov.io/skip3: CKV_K8S_22=Security Tool
    checkov.io/skip4: CKV_K8S_28=Security Tool
    checkov.io/skip5: CKV_K8S_29=Security Tool
    checkov.io/skip6: CKV_K8S_31=Security Tool
    checkov.io/skip7: CKV_K8S_37=Security Tool
    checkov.io/skip8: CKV_K8S_38=Security Tool
    checkov.io/skip9: CKV_K8S_40=OpenShift Injects Random UID
spec:
  #replicas: 3
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner
        app.kubernetes.io/component: scanner
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8080,8443"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
        openshift.io/required-scc: nonroot-v2
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
              weight: 50
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
              weight: 25
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: scanner
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: scanner

          image: "quay.io/stackrox-io/scanner:4.8.0@sha256:82380937cce50b22bb2c0aedd1dcc3bdd7cb8d2d9f277b0202fc00ef2581b6e5"
          env:
            - name: ROX_MEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ROX_OPENSHIFT_API
              value: "true"

          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 500Mi
          command:
            - /entrypoint.sh
          ports:
            - name: https
              containerPort: 8080
            - name: grpc
              containerPort: 8443

          securityContext:
            capabilities:
              drop: ["NET_RAW"]
            runAsUser: 65534
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /scanner/ping
              port: 8080
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
            - name: scanner-etc-ssl-volume
              mountPath: /etc/ssl
            - name: scanner-etc-pki-volume
              mountPath: /etc/pki/ca-trust
            - name: additional-ca-volume
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true
            - name: scanner-config-volume
              mountPath: /etc/scanner
              readOnly: true
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: vuln-temp-db
              mountPath: /var/lib/stackrox
            - name: proxy-config-volume
              mountPath: /run/secrets/stackrox.io/proxy-config/
              readOnly: true
            - name: scanner-db-password
              mountPath: /run/secrets/stackrox.io/secrets
              readOnly: true

            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true

      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: scanner
      volumes:
        - name: additional-ca-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: additional-ca
        - name: scanner-etc-ssl-volume
          emptyDir: {}
        - name: scanner-etc-pki-volume
          emptyDir: {}
        - name: scanner-config-volume
          configMap:
            name: scanner-config
        - name: certs
          secret:
            secretName: scanner-tls
        - name: vuln-temp-db
          emptyDir: {}
        - name: proxy-config-volume
          secret:
            secretName: proxy-config
            optional: true
        - name: scanner-db-password
          secret:
            secretName: scanner-db-password

        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-central-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
---
# Source: stackrox-central-services/templates/02-scanner-06-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-db
  namespace: stackrox
  labels:
    app: scanner-db
    app.kubernetes.io/component: scanner
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
    checkov.io/skip1: CKV_K8S_8=Not Supported
    checkov.io/skip2: CKV_K8S_9=Not Supported
    checkov.io/skip3: CKV_K8S_20=Security Tool
    checkov.io/skip4: CKV_K8S_22=Security Tool
    checkov.io/skip5: CKV_K8S_28=Security Tool
    checkov.io/skip6: CKV_K8S_29=Security Tool
    checkov.io/skip7: CKV_K8S_30=Security Tool
    checkov.io/skip8: CKV_K8S_31=Security Tool
    checkov.io/skip9: CKV_K8S_37=Security Tool
    checkov.io/skip10: CKV_K8S_38=Security Tool
    checkov.io/skip11: CKV_K8S_40=OpenShift Injects Random UID
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner-db
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner-db
        app.kubernetes.io/component: scanner
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "5432"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
        openshift.io/required-scc: nonroot-v2
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # ScannerDB is single-homed, so avoid preemptible nodes.
            - weight: 100
              preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                      - "true"
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
            - weight: 25
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      initContainers:
        - name: init-db
          image: "quay.io/stackrox-io/scanner-db:4.8.0@sha256:a53bf59f19eef213d9af6ba9125a2d2a5f5ee9262c6f8e61c1758eaa434f7609"
          env:
            - name: POSTGRES_PASSWORD_FILE
              value: "/run/secrets/stackrox.io/secrets/password"
            - name: ROX_SCANNER_DB_INIT
              value: "true"
          resources:
            limits:
              cpu: 2000m
              memory: 4Gi
            requests:
              cpu: 10m
              memory: 200Mi
          volumeMounts:
            - name: scanner-db-data
              mountPath: /var/lib/postgresql/data
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs
              readOnly: true
            - name: scanner-db-password
              mountPath: /run/secrets/stackrox.io/secrets
              readOnly: true
      containers:
        - name: db
          image: "quay.io/stackrox-io/scanner-db:4.8.0@sha256:a53bf59f19eef213d9af6ba9125a2d2a5f5ee9262c6f8e61c1758eaa434f7609"
          ports:
            - name: tcp-postgresql
              protocol: TCP
              containerPort: 5432
          resources:
            limits:
              cpu: 300m
              memory: 3Gi
            requests:
              cpu: 100m
              memory: 1536Mi
          volumeMounts:
            - name: scanner-db-data
              mountPath: /var/lib/postgresql/data
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs
              readOnly: true
      serviceAccountName: scanner
      securityContext:
        fsGroup: 70
        runAsGroup: 70
        runAsNonRoot: true
        runAsUser: 70
      volumes:
        - name: scanner-config-volume
          configMap:
            name: scanner-config
        - name: certs
          secret:
            secretName: scanner-db-tls
            defaultMode: 0640
            items:
              - key: cert.pem
                path: server.crt
              - key: key.pem
                path: server.key
              - key: ca.pem
                path: root.crt
        - name: scanner-db-data
          emptyDir: {}
        - name: scanner-db-password
          secret:
            secretName: scanner-db-password
---
# Source: stackrox-central-services/templates/02-scanner-v4-07-db-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-v4-db
  namespace: stackrox
  labels:
    app: scanner-v4-db
    app.kubernetes.io/component: scanner-v4
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner-v4-db
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner-v4-db
        app.kubernetes.io/component: scanner-v4
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "5432"
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        owner: stackrox
        openshift.io/required-scc: nonroot-v2
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                      - "true"
              weight: 100
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
              weight: 50
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
              weight: 25
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
      serviceAccountName: scanner-v4
      terminationGracePeriodSeconds: 120
      initContainers:
        - name: init-db
          image: "quay.io/stackrox-io/scanner-v4-db:4.8.0@sha256:c844450f16d5cff16f940b353144b8c5af82a1ed6629e76fc8ba5b958f54ed61"
          env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "scram-sha-256"
            - name: POSTGRES_PASSWORD_FILE
              value: "/run/secrets/stackrox.io/secrets/password"
            - name: SCANNER_DB_INIT_BUNDLE_ENABLED
              value: "true"
          command:
            - init-entrypoint.sh
          volumeMounts:
            - name: disk
              mountPath: /var/lib/postgresql/data
            - name: scanner-v4-db-password
              mountPath: /run/secrets/stackrox.io/secrets
              readOnly: true
          resources:
            limits:
              cpu: 2000m
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 3Gi
      containers:
        - name: db
          image: "quay.io/stackrox-io/scanner-v4-db:4.8.0@sha256:c844450f16d5cff16f940b353144b8c5af82a1ed6629e76fc8ba5b958f54ed61"
          env:
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "scram-sha-256"

          ports:
            - name: tcp-postgresql
              containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 3Gi
          volumeMounts:
            - name: disk
              mountPath: /var/lib/postgresql/data
            - name: config-volume
              mountPath: /etc/stackrox.d/config/
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs
            - name: shared-memory
              mountPath: /dev/shm
      securityContext:
        fsGroup: 70
        runAsUser: 70
        runAsNonRoot: true
        runAsGroup: 70
      volumes:
        - name: disk
          persistentVolumeClaim:
            claimName: scanner-v4-db
        - name: config-volume
          configMap:
            name: scanner-v4-db-config
        - name: certs
          secret:
            secretName: scanner-v4-db-tls
            defaultMode: 0640
            items:
              - key: cert.pem
                path: server.crt
              - key: key.pem
                path: server.key
              - key: ca.pem
                path: root.crt
        - name: shared-memory
          emptyDir:
            medium: Memory
            sizeLimit: 750Mi
        - name: scanner-v4-db-password
          secret:
            secretName: scanner-v4-db-password
---
# Source: stackrox-central-services/templates/02-scanner-v4-07-indexer-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-v4-indexer
  namespace: stackrox
  labels:
    app: scanner-v4-indexer
    app.kubernetes.io/component: scanner-v4
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  #replicas: 3
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner-v4-indexer
  strategy:
    type: RollingUpdate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner-v4-indexer
        app.kubernetes.io/component: scanner-v4
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        openshift.io/required-scc: restricted-v2
        owner: stackrox
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
              weight: 50
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
              weight: 25
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: scanner-v4-indexer
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: indexer
          image: "quay.io/stackrox-io/scanner-v4:4.8.0@sha256:3214df16bbe6d955addfc8553d39fef5929d09a78a2e153d903e74e5c1824dde"
          env:
            - name: ROX_MEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ROX_CENTRAL_ENDPOINT
              value: "central.stackrox.svc:443"
            - name: ROX_OPENSHIFT_API
              value: "true"
            - name: ROX_METRICS_PORT
              value: ":9090"
            - name: ROX_ENABLE_SECURE_METRICS
              value: "true"
            - name: ROX_SECURE_METRICS_PORT
              value: ":9091"

          resources:
            limits:
              cpu: 2000m
              memory: 3Gi
            requests:
              cpu: 1000m
              memory: 1500Mi
          command:
            - entrypoint.sh
            - --conf=/etc/scanner/config.yaml
          ports:
            - name: grpc
              containerPort: 8443

            - containerPort: 9091
              name: monitoring-tls
          securityContext:
            capabilities:
              drop: ["NET_RAW"]
            runAsNonRoot: true
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/readiness
              port: 9443
            periodSeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: additional-ca-volume
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true
            - name: etc-ssl-volume
              mountPath: /etc/ssl
            - name: etc-pki-volume
              mountPath: /etc/pki/ca-trust
            - name: certs
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: config-volume
              mountPath: /etc/scanner
              readOnly: true
            - name: proxy-config-volume
              mountPath: /run/secrets/stackrox.io/proxy-config/
              readOnly: true
            - name: tmp-volume
              mountPath: /tmp
            - name: db-password
              mountPath: /run/secrets/stackrox.io/secrets
              readOnly: true
            - name: monitoring-tls
              mountPath: /run/secrets/stackrox.io/monitoring-tls
              readOnly: true

            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true

      securityContext:
        runAsNonRoot: true
      serviceAccountName: scanner-v4
      volumes:
        - name: additional-ca-volume
          secret:
            optional: true
            secretName: additional-ca
        - name: etc-ssl-volume
          emptyDir: {}
        - name: etc-pki-volume
          emptyDir: {}
        - name: certs
          secret:
            secretName: scanner-v4-indexer-tls
        - name: config-volume
          configMap:
            name: scanner-v4-indexer-config
        - name: proxy-config-volume
          secret:
            secretName: proxy-config
            optional: true
        - name: tmp-volume
          emptyDir: {}
        - name: db-password
          secret:
            secretName: scanner-v4-db-password
        - name: monitoring-tls
          secret:
            secretName: scanner-v4-indexer-monitoring-tls

        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-central-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
---
# Source: stackrox-central-services/templates/02-scanner-v4-07-matcher-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-v4-matcher
  namespace: stackrox
  labels:
    app: scanner-v4-matcher
    app.kubernetes.io/component: scanner-v4
    app.kubernetes.io/instance: stackrox-central-services
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stackrox
    app.kubernetes.io/part-of: stackrox-central-services
    app.kubernetes.io/version: 4.8.0
    helm.sh/chart: stackrox-central-services-400.8.0
  annotations:
    email: support@stackrox.com
    meta.helm.sh/release-name: stackrox-central-services
    meta.helm.sh/release-namespace: stackrox
    owner: stackrox
spec:
  #replicas: 2
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner-v4-matcher
  strategy:
    type: RollingUpdate
  template:
    metadata:
      namespace: stackrox
      labels:
        app: scanner-v4-matcher
        app.kubernetes.io/component: scanner-v4
        app.kubernetes.io/instance: stackrox-central-services
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: stackrox
        app.kubernetes.io/part-of: stackrox-central-services
        app.kubernetes.io/version: 4.8.0
        helm.sh/chart: stackrox-central-services-400.8.0
      annotations:
        email: support@stackrox.com
        meta.helm.sh/release-name: stackrox-central-services
        meta.helm.sh/release-namespace: stackrox
        openshift.io/required-scc: restricted-v2
        owner: stackrox
        traffic.sidecar.istio.io/excludeInboundPorts: "8443"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
              weight: 50
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
              weight: 25
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: scanner-v4-matcher
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: matcher
          image: "quay.io/stackrox-io/scanner-v4:4.8.0@sha256:3214df16bbe6d955addfc8553d39fef5929d09a78a2e153d903e74e5c1824dde"
          env:
            - name: ROX_MEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: requests.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ROX_CENTRAL_ENDPOINT
              value: "central.stackrox.svc:443"
            - name: ROX_OPENSHIFT_API
              value: "true"
            - name: ROX_METRICS_PORT
              value: ":9090"
            - name: ROX_ENABLE_SECURE_METRICS
              value: "true"
            - name: ROX_SECURE_METRICS_PORT
              value: ":9091"

          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 1000m
              memory: 500Mi
          command:
            - entrypoint.sh
            - --conf=/etc/scanner/config.yaml
          ports:
            - name: grpc
              containerPort: 8443

            - containerPort: 9091
              name: monitoring-tls
          securityContext:
            capabilities:
              drop: ["NET_RAW"]
            runAsNonRoot: true
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/readiness
              port: 9443
            periodSeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: additional-ca-volume
              mountPath: /usr/local/share/ca-certificates/
              readOnly: true
            - name: etc-ssl-volume
              mountPath: /etc/ssl
            - name: etc-pki-volume
              mountPath: /etc/pki/ca-trust
            - name: tls-volume
              mountPath: /run/secrets/stackrox.io/certs/
              readOnly: true
            - name: config-volume
              mountPath: /etc/scanner
              readOnly: true
            - name: proxy-config-volume
              mountPath: /run/secrets/stackrox.io/proxy-config/
              readOnly: true
            - name: tmp-volume
              mountPath: /tmp
            - name: db-password
              mountPath: /run/secrets/stackrox.io/secrets
              readOnly: true
            - name: monitoring-tls
              mountPath: /run/secrets/stackrox.io/monitoring-tls
              readOnly: true

            - name: trusted-ca-volume
              mountPath: /etc/pki/injected-ca-trust/
              readOnly: true

      securityContext:
        runAsNonRoot: true
      serviceAccountName: scanner-v4
      volumes:
        - name: additional-ca-volume
          secret:
            optional: true
            secretName: additional-ca
        - name: etc-ssl-volume
          emptyDir: {}
        - name: etc-pki-volume
          emptyDir: {}
        - name: tls-volume
          secret:
            secretName: scanner-v4-matcher-tls
        - name: config-volume
          configMap:
            name: scanner-v4-matcher-config
        - name: proxy-config-volume
          secret:
            secretName: proxy-config
            optional: true
        - name: tmp-volume
          emptyDir: {}
        - name: db-password
          secret:
            secretName: scanner-v4-db-password
        - name: monitoring-tls
          secret:
            secretName: scanner-v4-matcher-monitoring-tls

        - name: trusted-ca-volume
          configMap:
            name: injected-cabundle-stackrox-central-services
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            optional: true
