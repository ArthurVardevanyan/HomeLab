apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptime-kuma
  namespace: uptime-kuma
  labels:
    app: uptime-kuma
spec:
  revisionHistoryLimit: 0
  replicas: 1
  serviceName: uptime-kuma-service
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
      annotations:
        enable.version-checker.io/uptime-kuma: "true"
        seccomp.security.alpha.kubernetes.io/defaultProfileName: "runtime/default"
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - "k3s-server"
      hostname: uptime-kuma
      restartPolicy: Always
      automountServiceAccountToken: false
      serviceAccountName: uptime-kuma-sa
      containers:
        - image: louislam/uptime-kuma:1.11.3
          imagePullPolicy: IfNotPresent
          name: uptime-kuma
          ports:
            - containerPort: 3001
          resources:
            requests:
              memory: "150M"
              cpu: "100m"
            limits:
              memory: "300M"
              cpu: "200m"
          volumeMounts:
            - name: uptime-kuma-pvc
              mountPath: /app/data
          livenessProbe:
            exec:
              command:
                - node
                - extra/healthcheck.js
            initialDelaySeconds: 180
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 3001
              scheme: HTTP
      volumes:
        - name: uptime-kuma-pvc
          persistentVolumeClaim:
            claimName: uptime-kuma-pvc
