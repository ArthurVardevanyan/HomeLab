apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: buildah
  labels:
    app.kubernetes.io/version: "0.5"
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    tekton.dev/categories: Image Build
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: image-build
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    Buildah task builds source into a container image and
    then pushes it to a container registry.

    Buildah Task builds source into a container image using Project Atomic's
    Buildah build tool.It uses Buildah's support for building from Dockerfiles,
    using its buildah bud command.This command executes the directives in the
    Dockerfile to assemble a container image, then pushes that image to a
    container registry.

  params:
    - name: IMAGE
      description: Reference of the image buildah will produce.
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: registry.access.redhat.com/ubi9/buildah:9.1.0-5
    - name: STORAGE_DRIVER
      description: Set buildah storage driver
      default: vfs #overlay
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: CONTEXT
      description: Path to the directory to use as context.
      default: .
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: FORMAT
      description: The format of the built container, oci or docker
      default: "oci"
    - name: BUILD_EXTRA_ARGS
      description: Extra parameters passed for the build command when building images.
      default: ""
    - name: PUSH_EXTRA_ARGS
      description: Extra parameters passed for the push command when pushing images.
      type: string
      default: "--compression-format zstd:chunked"
    - name: SKIP_PUSH
      description: Skip pushing the built image
      default: "false"
  workspaces:
    - name: source
    - name: sslcertdir
      optional: true
    - name: dockerconfig
      description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry.
        The file should be placed at the root of the Workspace with name config.json.
      optional: true
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
    - name: IMAGE_URL
      description: Image repository where the built image would be pushed to
  steps:
    - name: build
      resources:
        requests:
          memory: 500Mi
          cpu: 500m
        limits:
          cpu: "2"
          memory: 5Gi
      image: $(params.BUILDER_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        mkdir -p /home/build/.local/share/containers
        mkdir -p /home/build/rundir/libpod
        rm -rf $(workspaces.source.path)/lost+found

        [[ "$(workspaces.sslcertdir.bound)" == "true" ]] && CERT_DIR_FLAG="--cert-dir $(workspaces.sslcertdir.path)"
        [[ "$(workspaces.dockerconfig.bound)" == "true" ]] && export DOCKER_CONFIG="$(workspaces.dockerconfig.path)"
        buildah ${CERT_DIR_FLAG} --storage-driver=$(params.STORAGE_DRIVER) bud \
          $(params.BUILD_EXTRA_ARGS) --format=$(params.FORMAT) \
          --tls-verify=$(params.TLSVERIFY) --no-cache \
          -f $(params.DOCKERFILE) -t $(params.IMAGE) $(params.CONTEXT)

        [[ "$(params.SKIP_PUSH)" == "true" ]] && echo "Push skipped" && exit 0
        buildah ${CERT_DIR_FLAG} --storage-driver=$(params.STORAGE_DRIVER) push \
          $(params.PUSH_EXTRA_ARGS) --tls-verify=$(params.TLSVERIFY) \
          --digestfile /tmp/image-digest $(params.IMAGE) \
          docker://$(params.IMAGE)
        cat /tmp/image-digest | tee $(results.IMAGE_DIGEST.path)
        echo "$(params.IMAGE)" | tee $(results.IMAGE_URL.path)
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
        - name: home
          mountPath: /home
        - name: root
          mountPath: /root
        - name: run
          mountPath: /var/run
        - name: cache
          mountPath: /var/cache
      securityContext:
        runAsNonRoot: false
        runAsUser: 0 #1000 #65532
        privileged: false
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        # seccompProfile:
        #   type: RuntimeDefault
        capabilities:
          add:
            - SETFCAP
          drop:
            - MKNOD
            - KILL
            # - SETUID
            # - SETGID
            #- ALL
  volumes:
    - name: varlibcontainers
      emptyDir:
        sizeLimit: 10Gi
    - name: home
      emptyDir:
        sizeLimit: 1Mi
    - name: tmp
      emptyDir:
        sizeLimit: 2Mi
    - name: var-tmp
      emptyDir:
        sizeLimit: 10Gi
    - name: root
      emptyDir:
        sizeLimit: 1Mi
    - name: run
      emptyDir:
        sizeLimit: 1Mi
    - name: cache
      emptyDir:
        sizeLimit: 1Mi
